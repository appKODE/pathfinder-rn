{
  "openapi": "3.0.0",
  "info": {
    "version": "1.0",
    "title": "EZD Rest API mobile_api",
    "contact": {
      "name": "ЭЖД",
      "url": "dnevnik.mos.ru",
      "email": "dnevnik@mos.ru"
    },
    "license": {
      "name": ""
    }
  },
  "tags": [
    {
      "name": "subjects-controller",
      "description": "Справочник предметов"
    },
    {
      "name": "mark-controller",
      "description": "Данные по оценкам"
    },
    {
      "name": "menu-controller",
      "description": "Сервис для получения меню"
    },
    {
      "name": "virtual-assistant-controller",
      "description": "Виртуальный помощник"
    },
    {
      "name": "visit-controller",
      "description": "Данные по проходу учеников"
    },
    {
      "name": "homework-controller",
      "description": "Данные по домашним заданиям"
    },
    {
      "name": "attendance-controller",
      "description": "Пропуски занятий"
    },
    {
      "name": "status-controller",
      "description": "Статус пользователей"
    },
    {
      "name": "school-info-controller",
      "description": "Сервис для работы с информацией о школе учащихся"
    },
    {
      "name": "subscription-controller",
      "description": "подписки"
    },
    {
      "name": "proxy-controller",
      "description": "Проксирование запросов"
    },
    {
      "name": "notifications-controller",
      "description": "Сервис для получения нотификаций"
    },
    {
      "name": "lesson-schedule-item-controller",
      "description": "Данные по уроку (новый)"
    },
    {
      "name": "subject-mark-controller",
      "description": "Оценки по предметам"
    },
    {
      "name": "billing-controller",
      "description": "Покупки и пополнение"
    },
    {
      "name": "feedback-form-controller",
      "description": "Сервис для работы с формой обратной связи"
    },
    {
      "name": "person-details-controller",
      "description": "Информация о персоне из МЭШ.Контингент"
    },
    {
      "name": "health-check-controller",
      "description": "Health check для мониторинга"
    },
    {
      "name": "preorder-controller",
      "description": "Сервис для предзаказа"
    },
    {
      "name": "cache-controller",
      "description": "Cache Controller"
    },
    {
      "name": "lesson-controller",
      "description": "Данные по уроку (устарел. для поддержания обратной совместимости)"
    },
    {
      "name": "news-controller",
      "description": "Сервис для работы с новостями"
    },
    {
      "name": "profile-controller",
      "description": "Сервис для работы с профилями пользователей"
    },
    {
      "name": "calendar-event-controller",
      "description": "Мероприятия"
    },
    {
      "name": "expenditure-limit-controller",
      "description": "Размер дневного ограничения на затраты"
    },
    {
      "name": "day-balance-info-controller",
      "description": "Информацию о балансе"
    },
    {
      "name": "final-mark-controller",
      "description": "Итоговые оценки"
    },
    {
      "name": "schedule-controller",
      "description": "Расписание уроков"
    },
    {
      "name": "periods-schedule-controller",
      "description": "Сервис для работы с графиками учебных и каникулярных периодов"
    },
    {
      "name": "programs-controller",
      "description": "Сервис для получения информации по программам"
    },
    {
      "name": "sudir-account-controller",
      "description": "Работа с учеткой Sudir"
    },
    {
      "name": "last-sign-in-controller",
      "description": "Учет входа пользователей"
    },
    {
      "name": "material-controller",
      "description": "Дополнительные материалы"
    }
  ],
  "paths": {
    "/mobile/api/attendance": {
      "get": {
        "tags": [
          "attendance-controller"
        ],
        "summary": "Получить пропуски учащегося за год",
        "operationId": "getAttendanceUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "groups",
            "in": "query",
            "description": "Массив id групп",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceListResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Пользователь не привязан к учебным группам"
          }
        }
      },
      "post": {
        "tags": [
          "attendance-controller"
        ],
        "summary": "Создать уведомление о пропусках",
        "operationId": "createNotificationUsingPOST",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AttendanceNotificationRequest"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceNotificationCreationResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceNotificationCreationResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "attendance-controller"
        ],
        "summary": "Изменить уведомление о пропусках",
        "operationId": "editNotificationUsingPUT",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/AttendanceNotificationRequest"
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceNotificationCreationResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AttendanceNotificationCreationResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "attendance-controller"
        ],
        "summary": "Удалить уведомление о пропусках",
        "operationId": "deleteNotificationUsingDELETE",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AttendanceNotificationRemovalRequest"
              }
            }
          },
          "description": "removalRequest",
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/mobile/api/balance/limit": {
      "get": {
        "tags": [
          "expenditure-limit-controller"
        ],
        "summary": "Получить размер дневного ограничения на затраты",
        "operationId": "getUsingGET_1",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "contract_id",
            "in": "query",
            "description": "Идентификатор контракта учащегося",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenditureLimitResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenditureLimitResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "expenditure-limit-controller"
        ],
        "summary": "Создать размер дневного ограничения на затраты",
        "operationId": "putUsingPUT",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExpenditureLimitRequest"
              }
            }
          },
          "description": "expenditureLimitRequest",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenditureLimitResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ExpenditureLimitResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/billing": {
      "get": {
        "tags": [
          "billing-controller"
        ],
        "summary": "Получить список покупок и пополнений за период",
        "operationId": "getBillingUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contract_id",
            "in": "query",
            "description": "Идентификатор контракта учащегося",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "С даты (если не указана, берется текущая)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "По дату (если не указана, равна from)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BillingResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BillingResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/cache/clear": {
      "get": {
        "tags": [
          "cache-controller"
        ],
        "summary": "clear",
        "operationId": "clearUsingGET",
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/day_balance_info": {
      "get": {
        "tags": [
          "day-balance-info-controller"
        ],
        "summary": "Получить список покупок и пополнений за период",
        "operationId": "getBalanceInfoUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contract_id",
            "in": "query",
            "description": "Идентификатор контракта учащегося",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "first",
            "in": "query",
            "description": "количество дней после указанной даты в after, если after отсутствует - то с текущей даты",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "after",
            "in": "query",
            "description": "С даты (если не указана, берется текущая)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/BalanceResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/events": {
      "get": {
        "tags": [
          "calendar-event-controller"
        ],
        "summary": "Получить список мероприятий",
        "operationId": "getUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "school_id",
            "in": "query",
            "description": "Идентификатор школы",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "class_unit_id",
            "in": "query",
            "description": "Идентификтор класса",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "from_date",
            "in": "query",
            "description": "Дата начала мероприятия",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "to_date",
            "in": "query",
            "description": "Дата окончания мероприятия",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EventListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/events/{event_item_id}": {
      "get": {
        "tags": [
          "calendar-event-controller"
        ],
        "summary": "Получить мероприятие по идентификатору",
        "operationId": "getByIdUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "Идентификатор мероприятия",
            "in": "path",
            "description": "event_item_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/EventItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "event_item_id",
          "in": "path",
          "required": true
        }
      ]
    },
    "/mobile/api/feedback_form/signed_url": {
      "get": {
        "tags": [
          "feedback-form-controller"
        ],
        "summary": "Получить урл в форме обратной связи",
        "operationId": "getSignedUrlUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "profile_id",
            "in": "query",
            "description": "Идентификатор профиля",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SignedUrlResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SignedUrlResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/final_marks": {
      "get": {
        "tags": [
          "final-mark-controller"
        ],
        "summary": "Получить итоговые оценки прошлых лет",
        "operationId": "getFinalMarksUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AcademicYearsResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/AcademicYearsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/homeworks": {
      "get": {
        "tags": [
          "homework-controller"
        ],
        "summary": "Получить домашние задания за период",
        "operationId": "getHomeworksUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "С даты (если не указана, берется текущая)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "По дату (если не указана, равна from)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeworkListResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HomeworkListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/homeworks/short": {
      "get": {
        "tags": [
          "homework-controller"
        ],
        "summary": "Получить домашние задания в сокращенной форме",
        "operationId": "getShortHomeworksUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "С даты (если не указана, берется текущая)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "По дату (если не указана, равна from)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Поле сортировки списка по дате выдачи ДЗ ('assigned_on') или дате выполнить до ('date')",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Восходящий порядок ('asc') или нисходящий порядок ('desc'), по умолчанию 'asc'",
            "required": false,
            "schema": {
              "type": "string",
              "default": "asc"
            }
          },
          {
            "name": "subject_id",
            "in": "query",
            "description": "Идентификатор предмета",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "page",
            "in": "query",
            "description": "Номер страницы",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "per_page",
            "in": "query",
            "description": "Количество объектов на странице",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HomeworkShortResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/HomeworkShortResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/homeworks/{homework_entry_student_id}/attachment": {
      "post": {
        "tags": [
          "homework-controller"
        ],
        "summary": "Прикрепить файл к домашнему заданию",
        "operationId": "addAttachmentsToHomeworksUsingPOST",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "homework_entry_student_id",
            "in": "path",
            "description": "homework_entry_student_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Тип образования. ОО, AE или EC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ОО"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "binary"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AttachmentSummaryResponse"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "homework-controller"
        ],
        "summary": "Удалить файл из домашнего задания ученика",
        "operationId": "deleteAttachmentsToHomeworksUsingDELETE",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "homework_entry_student_id",
            "in": "path",
            "description": "homework_entry_student_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Тип образования. ОО, AE или EC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ОО"
            }
          },
          {
            "name": "attachment_ids",
            "in": "query",
            "description": "Массив id файлов для удаления",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/mobile/api/homeworks/{homework_entry_student_id}/done": {
      "post": {
        "tags": [
          "homework-controller"
        ],
        "summary": "Оставить отметку о выполнении домашней работы",
        "description": "Только для ОО",
        "operationId": "markCompletedHomeworkUsingPOST",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "homework_entry_student_id",
            "in": "path",
            "description": "homework_entry_student_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "homework-controller"
        ],
        "summary": "Удалить отметку о выполнении домашней работы",
        "description": "Только для ОО",
        "operationId": "removemarkCompletedHomeworkUsingDELETE",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "homework_entry_student_id",
            "in": "path",
            "description": "homework_entry_student_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/mobile/api/last_sign_int": {
      "put": {
        "tags": [
          "last-sign-in-controller"
        ],
        "summary": "Проставить дату входа",
        "operationId": "getVisitsUsingPUT",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User-id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя user-id (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя profile-id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "*/*": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/lesson": {
      "get": {
        "tags": [
          "lesson-controller"
        ],
        "summary": "Получить информацию по уроку по дате и предмету",
        "operationId": "getLessonByDateUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Дата в формате \"YYYY-MM-DD\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "subject_id",
            "in": "query",
            "description": "Идентификатор предмета",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Тип урока. ОО, AE или EC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ОО"
            }
          },
          {
            "name": "parent_de",
            "in": "query",
            "description": "Признак добавление родительских дидактических единиц",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LessonResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LessonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Пользователь не привязан к учебным группам"
          }
        }
      }
    },
    "/mobile/api/lesson/{lessonId}": {
      "get": {
        "tags": [
          "lesson-controller"
        ],
        "summary": "Получить информацию по конкретному уроку",
        "operationId": "getLessonByIdUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "lessonId",
            "in": "path",
            "description": "Идентификатор урока",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "Тип урока. ОО, AE или EC",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ОО"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LessonResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LessonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/lesson_schedule_items": {
      "get": {
        "tags": [
          "lesson-schedule-item-controller"
        ],
        "summary": "Получить информацию по уроку по дате и предмету",
        "operationId": "getLessonByDateUsingGET_1",
        "parameters": [
          {
            "name": "Токен",
            "in": "header",
            "description": "Auth-Token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Идентификатор авторизованного пользователя",
            "in": "header",
            "description": "Profile-Id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "Идентификатор ученика",
            "in": "query",
            "description": "student_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Дата в формате \"YYYY-MM-DD\"",
            "in": "query",
            "description": "date",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Идентификатор предмета",
            "in": "query",
            "description": "subject_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Тип урока. ОО, AE или EC",
            "in": "query",
            "description": "type",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ОО"
            }
          },
          {
            "name": "parent_de",
            "in": "query",
            "description": "Признак добавление родительских дидактических единиц",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LessonScheduleItemResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LessonScheduleItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Пользователь не привязан к учебным группам"
          }
        }
      }
    },
    "/mobile/api/lesson_schedule_items/{lesson_schedule_item_id}": {
      "get": {
        "tags": [
          "lesson-schedule-item-controller"
        ],
        "summary": "Получить информацию по конкретному уроку",
        "operationId": "getLessonByIdUsingGET_1",
        "parameters": [
          {
            "name": "Токен",
            "in": "header",
            "description": "Auth-Token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Идентификатор авторизованного пользователя",
            "in": "header",
            "description": "Profile-Id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "Идентификатор урока",
            "in": "path",
            "description": "lesson_schedule_item_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Идентификатор ученика",
            "in": "query",
            "description": "student_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Тип урока. ОО, AE или EC",
            "in": "query",
            "description": "type",
            "required": false,
            "schema": {
              "type": "string",
              "default": "ОО"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LessonScheduleItemResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/LessonScheduleItemResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/lesson_schedule_items/{lesson_schedule_item_id}/evaluation": {
      "post": {
        "tags": [
          "lesson-schedule-item-controller"
        ],
        "summary": "Выставить лайк/дизлайк конкретному уроку",
        "operationId": "setEvaluationUsingPOST",
        "parameters": [
          {
            "name": "Токен",
            "in": "header",
            "description": "Auth-Token",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Идентификатор авторизованного пользователя",
            "in": "header",
            "description": "Profile-Id",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "Идентификатор урока",
            "in": "path",
            "description": "lesson_schedule_item_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Идентификатор ученика",
            "in": "query",
            "description": "student_id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Оценка урока",
            "in": "query",
            "description": "evaluation",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "LIKE",
                "DISLIKE"
              ]
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/marks": {
      "get": {
        "tags": [
          "mark-controller"
        ],
        "summary": "Получить оценки за период",
        "operationId": "getMarksUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "С даты (если не указана, берется текущая)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "По дату (если не указана, равна from)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarkWithSubjectListResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MarkWithSubjectListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/marks/{markId}": {
      "get": {
        "tags": [
          "mark-controller"
        ],
        "summary": "Получить информацию по конкретной оценке",
        "operationId": "getSingleMarkUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "markId",
            "in": "path",
            "description": "Идентификатор оценки",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Дата оценки",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MarkResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MarkResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/materials": {
      "get": {
        "tags": [
          "material-controller"
        ],
        "summary": "Получить список дополнительных материалов",
        "operationId": "getMaterialsUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "class_level_id",
            "in": "query",
            "description": "Идентификатор параллели",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subject_id",
            "in": "query",
            "description": "Идентификатор предмета",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "theme_frame_ids",
            "in": "query",
            "description": "Массив идентификаторов дидактических единиц",
            "required": true,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          },
          {
            "name": "sort_column",
            "in": "query",
            "description": "Поле сортировки списка",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sort_direction",
            "in": "query",
            "description": "Порядок сортировки",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Количество объектов, которые необходимо получить",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaterialResponse"
                  }
                }
              },
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MaterialResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/menu": {
      "get": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Получить меню",
        "operationId": "getMenuUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Дата в фортате \"YYYY-MM-DD\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "contract_id",
            "in": "query",
            "description": "Идентификатор контракта учащегося",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MenuResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/menu/buffet": {
      "get": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Получить меню буфета",
        "operationId": "getMenuOfBuffetUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Дата в фортате \"YYYY-MM-DD\"",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "contract_id",
            "in": "query",
            "description": "Идентификатор контракта учащегося",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/MenuOfBuffetResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/menu/buffet/prohibition": {
      "post": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Установка запрещаемого фильтра",
        "operationId": "addProhibitionOnMenuOfBuffetUsingPOST",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProhibitionRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProhibitionResponse"
                  }
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "menu-controller"
        ],
        "summary": "Снятие запрещаемого фильтра",
        "operationId": "removeProhibitionOnMenuOfBuffetUsingDELETE",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contract_id",
            "in": "query",
            "description": "Идентификатор контракта учащегося",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "prohibition_ids",
            "in": "query",
            "description": "Идентификатор контракта учащегося",
            "required": false,
            "explode": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "integer",
                "format": "int64"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/mobile/api/monitoring": {
      "get": {
        "tags": [
          "health-check-controller"
        ],
        "summary": "check",
        "operationId": "healthCkeckUsingGET",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "string"
                }
              },
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/news": {
      "get": {
        "tags": [
          "news-controller"
        ],
        "summary": "Получить новости",
        "operationId": "getNewsUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsListResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NewsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/news/{news_id}": {
      "get": {
        "tags": [
          "news-controller"
        ],
        "summary": "Получить новость по идентификатору",
        "operationId": "getNewsByIdUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "news_id",
            "in": "path",
            "description": "Идентификатор новости",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NewsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/notifications/search": {
      "get": {
        "tags": [
          "notifications-controller"
        ],
        "summary": "Получить нотификацию",
        "operationId": "getNotificationsUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика, для которого запрашивают нотификацию",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationResponse"
                  }
                }
              },
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/NotificationResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/notifications/status": {
      "get": {
        "tags": [
          "notifications-controller"
        ],
        "summary": "Получить информацию о наличии новых нотификаций",
        "operationId": "getStatusUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика, для которого запрашивают нотификацию",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/NotificationStatus"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/periods_schedules": {
      "get": {
        "tags": [
          "periods-schedule-controller"
        ],
        "summary": "Получение списка графика периодов",
        "description": "Тут заполняется 2 доп. поля vacationPeriodCount и learningPeriodCount, поле periods остается пустым. Фильтр по школе береться из UserProfile",
        "operationId": "getListUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Начало промежутка дат в формате \"YYYY-MM-DD\", включительно",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Конец промежутка дат в формате \"YYYY-MM-DD\", включительно",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CalendarResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/person-details": {
      "get": {
        "tags": [
          "person-details-controller"
        ],
        "summary": "Получить информация о персоне из МЭШ.Контингент",
        "operationId": "getPersonUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "contingent_guid",
            "in": "query",
            "description": "Идентификатор МЭШ.Контингент",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PersonInfoResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PersonInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/preorder": {
      "get": {
        "tags": [
          "preorder-controller"
        ],
        "summary": "Получить список меню предзаказа",
        "operationId": "getPreorderComplexesUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "contract_id",
            "in": "query",
            "description": "Идентификатор контракта учащегося",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "Дата, с которой (включительно) запрашиваются данные предзаказа. Если не задано, берется текущий день",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "Дата, до которой (включительно) запрашиваются данные предзаказа. Если не задано, прибавляем к from 13 дней",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PreorderComplexesResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "preorder-controller"
        ],
        "summary": "Создать или изменить предзаказ",
        "operationId": "createOrChangePreorderSumUsingPUT",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PreorderRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/preorder/accept": {
      "post": {
        "tags": [
          "preorder-controller"
        ],
        "summary": "Отправить согласие представителя на получение обучающимся услуги предзаказа",
        "operationId": "acceptPreorderTermsUsingPOST",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AcceptPreorderTermsRequest"
              }
            }
          },
          "description": "request",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/preorder/summary": {
      "get": {
        "tags": [
          "preorder-controller"
        ],
        "summary": "Получить сумму предзаказа на день",
        "operationId": "getPreorderSumUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "contract_id",
            "in": "query",
            "description": "Идентификатор контракта учащегося",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Номер телефона законного представителя",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "День, за который выдать сумму. По умолчанию берется текущий день",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/PreorderSumResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/profile": {
      "get": {
        "tags": [
          "profile-controller"
        ],
        "summary": "Получить профиль пользователя",
        "operationId": "getProfileUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                },
                "examples": {
                  "user1": {
                    "value": {
                      "profile": {
                        "last_name": "Халева",
                        "first_name": "Елена",
                        "middle_name": "Юрьевна",
                        "birth_date": "1979-09-24",
                        "sex": null,
                        "user_id": 9571147,
                        "id": 9761699,
                        "contract_id": null,
                        "phone": "9161460259",
                        "email": "haleva_elena@mail.ru",
                        "snils": "027-512-824 39",
                        "type": "parent"
                      },
                      "children": [
                        {
                          "last_name": "Халева",
                          "first_name": "Екатерина",
                          "middle_name": "Александровна",
                          "birth_date": "2006-09-18",
                          "sex": "female",
                          "user_id": 356738,
                          "id": 437099,
                          "contract_id": 76502129,
                          "phone": "79663071313",
                          "email": "halevakata@gmail.com",
                          "snils": "186-906-350 10",
                          "type": null,
                          "school": {
                            "id": 59,
                            "name": "Государственное бюджетное общеобразовательное учреждение города Москвы \"Школа № 2045\"",
                            "short_name": "ГБОУ Школа № 2045",
                            "county": "Зеленоградский административный округ",
                            "principal": "Халева Анна Федоровна",
                            "phone": "(495) 123-67-09"
                          },
                          "class_name": "8-Г",
                          "class_level_id": 8,
                          "class_unit_id": 403491,
                          "groups": [
                            {
                              "id": 5373496,
                              "name": "Физическая культура 8Г 8г",
                              "subject_id": 20
                            },
                            {
                              "id": 5373498,
                              "name": "Физика 8Г 8г",
                              "subject_id": 56
                            },
                            {
                              "id": 5373499,
                              "name": "Избранные вопросы математики (геометрия) 8Г 8г",
                              "subject_id": 161019
                            },
                            {
                              "id": 5373500,
                              "name": "Биология 8Г 8г",
                              "subject_id": 57
                            },
                            {
                              "id": 5373502,
                              "name": "Химия 8Г 8г",
                              "subject_id": 58
                            },
                            {
                              "id": 5373504,
                              "name": "Родная литература 8Г 8г",
                              "subject_id": 131417
                            },
                            {
                              "id": 5373505,
                              "name": "Основы безопасности жизнедеятельности 8Г 8г",
                              "subject_id": 59
                            },
                            {
                              "id": 5373506,
                              "name": "Теория математической вероятности 8Г 8г",
                              "subject_id": 131868
                            },
                            {
                              "id": 5373508,
                              "name": "Литература 8Г 8г",
                              "subject_id": 33
                            },
                            {
                              "id": 5373510,
                              "name": "Математика 8Г 8г",
                              "subject_id": 8
                            },
                            {
                              "id": 5373511,
                              "name": "История России. Всеобщая история 8Г 8г",
                              "subject_id": 40
                            },
                            {
                              "id": 5373512,
                              "name": "Русский язык 8Г 8г",
                              "subject_id": 3177
                            },
                            {
                              "id": 5373513,
                              "name": "Обществознание 8Г 8г",
                              "subject_id": 44
                            },
                            {
                              "id": 5373514,
                              "name": "География 8Г",
                              "subject_id": 45
                            },
                            {
                              "id": 5373515,
                              "name": "Алгебра 8Г",
                              "subject_id": 46
                            },
                            {
                              "id": 5373495,
                              "name": "Геометрия 8Г 8г",
                              "subject_id": 47
                            },
                            {
                              "id": 5373497,
                              "name": "Родная литература (русская) 8Г 8г",
                              "subject_id": 156243
                            },
                            {
                              "id": 5538135,
                              "name": "Англ яз 2гр Чернухин 8г",
                              "subject_id": 144641
                            },
                            {
                              "id": 5541226,
                              "name": "Информатика 2 гр Берников 8г",
                              "subject_id": 32
                            },
                            {
                              "id": 5373503,
                              "name": "Второй иностранный язык (немецкий) 8Г 8г",
                              "subject_id": 144638
                            },
                            {
                              "id": 5914172,
                              "name": "Классный час 8Г 8г",
                              "subject_id": 156247
                            }
                          ],
                          "representatives": [
                            {
                              "last_name": "Халева",
                              "first_name": "Елена",
                              "middle_name": "Юрьевна",
                              "birth_date": null,
                              "sex": null,
                              "user_id": null,
                              "id": 9761699,
                              "contract_id": null,
                              "phone": "9161460259",
                              "email": "haleva_elena@mail.ru",
                              "snils": "027-512-824 39",
                              "type": null
                            },
                            {
                              "last_name": "Халев",
                              "first_name": "Александр",
                              "middle_name": "Викторович",
                              "birth_date": null,
                              "sex": null,
                              "user_id": null,
                              "id": 9761696,
                              "contract_id": null,
                              "phone": "9031580404",
                              "email": "sanek1_2@mail.ru",
                              "snils": "047-368-372 85",
                              "type": null
                            }
                          ],
                          "sections": [
                            {
                              "id": 4284557,
                              "name": "Объединение «Комплексная услуга  – 8 Г» - 1",
                              "subject_id": null
                            }
                          ],
                          "sudir_account_exists": true,
                          "sudir_login": "halevaea",
                          "is_legal_representative": true,
                          "parallel_curriculum_id": 302441,
                          "contingent_guid": "e5d9db66-0c69-4b48-9bd5-74f4f6f78d5c"
                        }
                      ],
                      "hash": "2c27cb88613103101b6b83875dae6f1ef84d9d518ade1c9c4aa6ad3a522f5834"
                    }
                  }
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ProfileResponse"
                },
                "examples": {
                  "example-1": {
                    "value": {
                      "children": [
                        {
                          "birth_date": "string",
                          "class_level_id": 0,
                          "class_name": "string",
                          "class_unit_id": 0,
                          "contingent_guid": "string",
                          "contract_id": 0,
                          "email": "string",
                          "first_name": "string",
                          "groups": [
                            {
                              "id": 0,
                              "name": "string",
                              "subject_id": 0
                            }
                          ],
                          "id": 0,
                          "is_legal_representative": false,
                          "last_name": "string",
                          "middle_name": "string",
                          "parallel_curriculum_id": 0,
                          "phone": "string",
                          "representatives": [
                            {
                              "birth_date": "string",
                              "contract_id": 0,
                              "email": "string",
                              "first_name": "string",
                              "id": 0,
                              "last_name": "string",
                              "middle_name": "string",
                              "phone": "string",
                              "sex": "male",
                              "snils": "string",
                              "type": "string",
                              "user_id": 0
                            }
                          ],
                          "school": {
                            "county": "string",
                            "id": 0,
                            "name": "string",
                            "phone": "string",
                            "principal": "string",
                            "short_name": "string"
                          },
                          "sections": [
                            {
                              "id": 0,
                              "name": "string",
                              "subject_id": 0
                            }
                          ],
                          "sex": "male",
                          "snils": "string",
                          "sudir_account_exists": false,
                          "sudir_login": "string",
                          "type": "string",
                          "user_id": 0
                        }
                      ],
                      "hash": "string",
                      "profile": {
                        "birth_date": "string",
                        "contract_id": 0,
                        "email": "string",
                        "first_name": "string",
                        "id": 0,
                        "last_name": "string",
                        "middle_name": "string",
                        "phone": "string",
                        "sex": "male",
                        "snils": "string",
                        "type": "string",
                        "user_id": 0
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/programs/lesson_plan": {
      "get": {
        "tags": [
          "programs-controller"
        ],
        "summary": "Получить рабочую программу учебного плана ученика",
        "operationId": "getLessonPlanUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "ID группы, для которой получают РП",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "school_id",
            "in": "query",
            "description": "Идентификатор школы",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProgramModuleResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/programs/parallel_curriculum/{parallel_curriculum_id}": {
      "get": {
        "tags": [
          "programs-controller"
        ],
        "summary": "Получить учебный план ученика",
        "operationId": "getParallelCurriculumUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "parallel_curriculum_id",
            "in": "path",
            "description": "ID учебного плана ученика",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "subject_id",
            "in": "query",
            "description": "Идентификатор предмета",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ParallelCurriculumResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/proxy/logs": {
      "put": {
        "tags": [
          "proxy-controller"
        ],
        "summary": "Проксировать логи",
        "operationId": "logsUsingPUT",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProxyLogRequest"
              }
            }
          },
          "description": "proxyLogRequest",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/schedule": {
      "get": {
        "tags": [
          "schedule-controller"
        ],
        "summary": "Получить расписание ученика на определенную дату",
        "operationId": "getScheduleForDateUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Дата",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_de",
            "in": "query",
            "description": "Признак добавление родительских дидактических единиц",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ScheduleResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Пользователь не привязан к учебным группам"
          }
        }
      }
    },
    "/mobile/api/schedule/period": {
      "get": {
        "tags": [
          "schedule-controller"
        ],
        "summary": "Получить расписание ученика за определенный период",
        "operationId": "getScheduleForPeriodUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "С даты",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "По дату",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "parent_de",
            "in": "query",
            "description": "Признак добавление родительских дидактических единиц",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchedulePeriodResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Пользователь не привязан к учебным группам"
          }
        }
      }
    },
    "/mobile/api/schedule/short": {
      "get": {
        "tags": [
          "schedule-controller"
        ],
        "summary": "Получить сокращенное расписание ученика для списка дат",
        "operationId": "getSimpleScheduleForDateListUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "dates",
            "in": "query",
            "description": "Даты через запятую",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleScheduleDateListResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleScheduleDateListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "description": "Пользователь не привязан к учебным группам"
          }
        }
      }
    },
    "/mobile/api/school_info": {
      "get": {
        "tags": [
          "school-info-controller"
        ],
        "summary": "Получить информацию о школе учащегося",
        "operationId": "getSchoolInfoUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "ID авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "class_unit_id",
            "in": "query",
            "description": "ID класса учащегося",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "school_id",
            "in": "query",
            "description": "ID школы учащегося",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolInfoResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SchoolInfoResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/status": {
      "get": {
        "tags": [
          "status-controller"
        ],
        "summary": "Получить статусы нескольких учащихся",
        "operationId": "getStatusUsingGET_1",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "contract_ids",
            "in": "query",
            "description": "Идентификаторы контракта учащихся через запятую",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/StatusResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/subject_marks": {
      "get": {
        "tags": [
          "subject-mark-controller"
        ],
        "summary": "Получить сводную информацию по всем предметам",
        "operationId": "getSubjectMarksListUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectMarksListResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectMarksListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/subject_marks/for_subject": {
      "get": {
        "tags": [
          "subject-mark-controller"
        ],
        "summary": "Получить сводную информацию по конкретному предмету",
        "operationId": "getSubjectMarkUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "subject_name",
            "in": "query",
            "description": "Наименование предмета",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectMarksResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectMarksResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/subject_marks/short": {
      "get": {
        "tags": [
          "subject-mark-controller"
        ],
        "summary": "Получить упрощенную сводную информацию по всем предметам",
        "operationId": "getShortSubjectMarksListUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ShortSubjectMarksListResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ShortSubjectMarksListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/subjects/list": {
      "get": {
        "tags": [
          "subjects-controller"
        ],
        "summary": "Получить список предметов ученика",
        "operationId": "getListUsingGET_1",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectsListResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SubjectsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/subscriptions": {
      "get": {
        "tags": [
          "subscription-controller"
        ],
        "summary": "Получить все подписки родителя",
        "operationId": "getSpecificSubscriptionUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "ID профиля родителя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Subscription"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "subscription-controller"
        ],
        "summary": "Подписаться на событие",
        "operationId": "addSubscriptionUsingPOST",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "ID профиля родителя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Subscription"
              }
            }
          },
          "description": "Объект подписки для передачи в модуль подписок",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/Subscription"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/subscriptions/{id}": {
      "delete": {
        "tags": [
          "subscription-controller"
        ],
        "summary": "Удалить конкретную подписку по id",
        "operationId": "deleteSubscriptionUsingDELETE",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "ID профиля родителя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID подписки",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/mobile/api/sudir/account/register/user/{user_id}": {
      "put": {
        "tags": [
          "sudir-account-controller"
        ],
        "summary": "Регистрация учетки в Sudir. Перед регистрацией нужно сгенерировать логин методом {web.prefix}/sudir/account/user/{user_id}/login",
        "operationId": "registerUsingPUT",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "ID профиля родителя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "Id пользователя студента, кому создаём учетку",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SudirUserRegRequest"
              }
            }
          },
          "description": "sudirUserRegRequest",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/sudir/account/user/{user_id}/login": {
      "post": {
        "tags": [
          "sudir-account-controller"
        ],
        "summary": "Генерация логина для Sudir",
        "operationId": "generateSudirLoginUsingPOST",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "ID профиля родителя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "Id пользователя студента, кому создаём учетку",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SudirValue"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/sudir/account/user/{user_id}/password": {
      "post": {
        "tags": [
          "sudir-account-controller"
        ],
        "summary": "Изменение пароля от учетки Sudir",
        "operationId": "changePasswordUsingPOST",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "ID профиля родителя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "user_id",
            "in": "path",
            "description": "Id пользователя студента, кому создаём учетку",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SudirValue"
              }
            }
          },
          "description": "password",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/virtual-assistant/classificators": {
      "get": {
        "tags": [
          "virtual-assistant-controller"
        ],
        "summary": "Получить дерево классификатора РБНДО",
        "operationId": "getClassificatorsUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClassificatorResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/ClassificatorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/virtual-assistant/requests": {
      "get": {
        "tags": [
          "virtual-assistant-controller"
        ],
        "summary": "Получить список заявлений персоны",
        "operationId": "getRequestsUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "min",
            "in": "query",
            "description": "Минимальное значение диапазона",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Максимальное значение диапазона",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestResponse"
                  }
                }
              },
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/RequestResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "post": {
        "tags": [
          "virtual-assistant-controller"
        ],
        "summary": "Отправить заявление",
        "operationId": "createRequestUsingPOST",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RequestCreatingRequestDto"
              }
            }
          },
          "description": "requestDto",
          "required": true
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "virtual-assistant-controller"
        ],
        "summary": "Удалить заявление",
        "operationId": "deleteRequestUsingDELETE",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "Идентификатор заявления",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/mobile/api/virtual-assistant/services": {
      "get": {
        "tags": [
          "virtual-assistant-controller"
        ],
        "summary": "Получить список доступных персоне услуг",
        "operationId": "getServicesUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "min",
            "in": "query",
            "description": "Минимальное значение диапазона",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "max",
            "in": "query",
            "description": "Максимальное значение диапазона",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "parallel_id",
            "in": "query",
            "description": "Идентификатор параллели",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "open_only",
            "in": "query",
            "description": "Признак услуги, у которых открыт прием заявлений",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "organization_id",
            "in": "query",
            "description": "Идентификатор организации",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceResponse"
                  }
                }
              },
              "*/*": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ServiceResponse"
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/virtual-assistant/{requestId}/comment": {
      "get": {
        "tags": [
          "virtual-assistant-controller"
        ],
        "summary": "Получить отзыв пользователя на заявление",
        "operationId": "getFeedbackForRequestUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "Идентификатор заявления",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/FeedbackRequestResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "virtual-assistant-controller"
        ],
        "summary": "Создать/обновить отзыв пользователя на заявление",
        "operationId": "updateFeedbackForRequestUsingPUT",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "Идентификатор заявления",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeedbackRequestRequestDto"
              }
            }
          },
          "description": "requestDto",
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "virtual-assistant-controller"
        ],
        "summary": "Удалить отзыв пользователя на заявление",
        "operationId": "deleteFeedbackForRequestUsingDELETE",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "requestId",
            "in": "path",
            "description": "Идентификатор заявления",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/CommonResponse"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    },
    "/mobile/api/visits": {
      "get": {
        "tags": [
          "visit-controller"
        ],
        "summary": "Получить список проходов за период",
        "operationId": "getVisitsUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "contract_id",
            "in": "query",
            "description": "Идентификатор контракта учащегося",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Профиль (автоматически заполняется при авторизации)",
            "in": "header",
            "description": "Profile",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "С даты (если не указана, берется текущая)",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "По дату (если не указана, равна from)",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VisitsListResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/VisitsListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/mobile/api/visits/qr": {
      "get": {
        "tags": [
          "visit-controller"
        ],
        "summary": "Получение QR-кода из ИСПП для прохода",
        "operationId": "getQrCodeUsingGET",
        "parameters": [
          {
            "name": "Auth-Token",
            "in": "header",
            "description": "Токен",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Profile-Id",
            "in": "header",
            "description": "Идентификатор авторизованного пользователя",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Profile",
            "in": "header",
            "description": "Профиль (автоматически заполняется при авторизации)",
            "required": false,
            "schema": {
              "type": "ref"
            }
          },
          {
            "name": "student_id",
            "in": "query",
            "description": "Идентификатор ученика",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QrCodeResponse"
                }
              },
              "*/*": {
                "schema": {
                  "$ref": "#/components/schemas/QrCodeResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  },
  "servers": [
    {
      "url": "//dnevnik-dev.mos.ru/",
      "description": "dev"
    },
    {
      "url": "//dnevnik.mos.ru/",
      "description": "production"
    }
  ],
  "components": {
    "requestBodies": {
      "AttendanceNotificationRequest": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/AttendanceNotificationRequest"
            }
          }
        },
        "description": "attendanceNotification",
        "required": true
      }
    },
    "schemas": {
      "SubjectResponse": {
        "type": "object",
        "required": [
          "subject_id",
          "subject_name"
        ],
        "properties": {
          "subject_id": {
            "type": "integer",
            "format": "int32"
          },
          "subject_name": {
            "type": "string"
          }
        },
        "description": "Предмет"
      },
      "MenuItemResponse": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string",
            "description": "Описание вроде \"Комплекс\""
          },
          "is_discount_complex": {
            "type": "boolean",
            "example": false,
            "description": "Бюджетный или платный комплекс"
          },
          "meals": {
            "type": "array",
            "description": "Состав комплекса",
            "items": {
              "$ref": "#/components/schemas/MealResponse"
            }
          },
          "summary": {
            "type": "integer",
            "format": "int64",
            "description": "Цена всего комплекса в копейках"
          },
          "title": {
            "type": "string",
            "description": "Заголовок вроде \"Завтрак 1-1\""
          },
          "used_special_menu": {
            "type": "boolean",
            "example": false,
            "description": "Флаг об участии комплекса в предзаказе"
          },
          "used_subscription_feeding": {
            "type": "boolean",
            "example": false,
            "description": "Флаг об участии комплекса в персонализированном питании"
          },
          "used_variable_feeding": {
            "type": "boolean",
            "example": false,
            "description": "Флаг об участии комплекса в вариативном льготном питании (на текущий момент не используется испп)"
          }
        },
        "description": "Комплекс питания"
      },
      "PreorderRequest": {
        "type": "object",
        "required": [
          "contract_id"
        ],
        "properties": {
          "complex": {
            "$ref": "#/components/schemas/PreorderComplexRequest"
          },
          "contract_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор контракта ученика"
          },
          "date": {
            "type": "string",
            "example": "2020-12-31",
            "description": "День, на который делают предзаказ"
          },
          "phone": {
            "type": "string",
            "description": "Номер телефона законного представителя (не используется)"
          }
        },
        "description": "Предзаказ"
      },
      "SubjectMarksResponse": {
        "type": "object",
        "required": [
          "average",
          "average_by_all",
          "dynamic",
          "periods",
          "subject_name"
        ],
        "properties": {
          "average": {
            "type": "string",
            "description": "Средняя годовая оценка (считается по фиксированным оценкам за аттестационный период)"
          },
          "average_by_all": {
            "type": "string",
            "description": "Средняя годовая оценка (считается по всем оценкам)"
          },
          "dynamic": {
            "type": "string",
            "description": "Динамика оценки",
            "enum": [
              "UP",
              "DOWN",
              "NONE"
            ]
          },
          "periods": {
            "type": "array",
            "description": "Оценки с разбивкой по периодам",
            "items": {
              "$ref": "#/components/schemas/SubjectMarksPeriodResponse"
            }
          },
          "subject_name": {
            "type": "string",
            "description": "Название предмета"
          }
        }
      },
      "MarkWithSubjectResponse": {
        "type": "object",
        "required": [
          "date",
          "id",
          "subject_name",
          "value",
          "weight"
        ],
        "properties": {
          "comment_exists": {
            "type": "boolean",
            "example": false,
            "description": "Флаг наличия комментария"
          },
          "control_form_name": {
            "type": "string",
            "example": "Контрольная работа",
            "description": "Наименование формы контроля"
          },
          "created_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "criteria": {
            "type": "array",
            "description": "Массив критериев оценки",
            "items": {
              "$ref": "#/components/schemas/MarkCriteriaResponse"
            }
          },
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор оценки"
          },
          "is_exam": {
            "type": "boolean",
            "example": false,
            "description": "Признак экзамена (контрольной"
          },
          "is_point": {
            "type": "boolean",
            "example": false,
            "description": "Признак точки"
          },
          "point_date": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "subject_name": {
            "type": "string",
            "description": "Наименование предмета"
          },
          "updated_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "value": {
            "type": "string",
            "description": "Значение"
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "description": "Вес"
          }
        }
      },
      "SimpleScheduleDateResponse": {
        "type": "object",
        "required": [
          "date",
          "lessons"
        ],
        "properties": {
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "lessons": {
            "type": "array",
            "description": "Расписание",
            "items": {
              "$ref": "#/components/schemas/SimpleScheduleItemResponse"
            }
          }
        }
      },
      "AttendanceLessonResponse": {
        "type": "object",
        "required": [
          "bell_id",
          "subject_id",
          "subject_name"
        ],
        "properties": {
          "bell_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор элемента расписания"
          },
          "notified": {
            "type": "boolean",
            "example": false,
            "description": "Отметка об уведомлении"
          },
          "reason_id": {
            "type": "integer",
            "format": "int32",
            "description": "Причина отсутствия"
          },
          "subject_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор предмета"
          },
          "subject_name": {
            "type": "string",
            "description": "Наименование предмета"
          }
        }
      },
      "PreorderSumResponse": {
        "type": "object",
        "required": [
          "date",
          "forbidenDays",
          "preorder_sum_14",
          "preorder_sum_3",
          "subsription"
        ],
        "properties": {
          "calendar": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PreorderCalendarItemResponse"
            }
          },
          "date": {
            "type": "string",
            "description": "День, за который выдана сумма"
          },
          "forbidenDays": {
            "type": "integer",
            "format": "int32",
            "description": "Количество дней запрещенных для редактирования"
          },
          "preorder_sum": {
            "type": "integer",
            "format": "int64",
            "description": "Сумма предзаказа за день"
          },
          "preorder_sum_14": {
            "type": "integer",
            "format": "int64",
            "description": "Сумма предзаказа на 14 дней вперед, включая текущий день"
          },
          "preorder_sum_3": {
            "type": "integer",
            "format": "int64",
            "description": "Сумма предзаказа на 3 дня вперед, включая текущий день"
          },
          "subsription": {
            "type": "boolean",
            "example": false,
            "description": "Наличие активной циклограммы на момент выполнения запроса"
          }
        },
        "description": "Сумма предзаказа за день"
      },
      "TargetResponse": {
        "type": "object",
        "required": [
          "paths",
          "remain"
        ],
        "properties": {
          "paths": {
            "type": "array",
            "description": "Путь достижения цели",
            "items": {
              "$ref": "#/components/schemas/PathToTargetResponse"
            }
          },
          "remain": {
            "type": "integer",
            "format": "int32",
            "description": "Количество оценок оставшихся до цели, 0 - цель достигнута"
          },
          "round": {
            "type": "string",
            "description": "Минимальное значение при округлении которого получится целевая оценка"
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "description": "Целевая оценка"
          }
        },
        "description": "Цель до 5-ки"
      },
      "TransactionItemResponse": {
        "type": "object",
        "required": [
          "consist",
          "count",
          "price",
          "title"
        ],
        "properties": {
          "consist": {
            "type": "array",
            "description": "Составляющие комплекса",
            "items": {
              "type": "string"
            }
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "description": "Количество приобретенного товара"
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "description": "Цена"
          },
          "title": {
            "type": "string",
            "description": "Наименование"
          }
        }
      },
      "LocalDate": {
        "type": "object",
        "properties": {
          "chronology": {
            "$ref": "#/components/schemas/IsoChronology"
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32"
          },
          "era": {
            "$ref": "#/components/schemas/Era"
          },
          "leapYear": {
            "type": "boolean"
          },
          "month": {
            "type": "string",
            "enum": [
              "JANUARY",
              "FEBRUARY",
              "MARCH",
              "APRIL",
              "MAY",
              "JUNE",
              "JULY",
              "AUGUST",
              "SEPTEMBER",
              "OCTOBER",
              "NOVEMBER",
              "DECEMBER"
            ]
          },
          "monthValue": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "PreorderGroupResponse": {
        "type": "object",
        "required": [
          "complexes",
          "group"
        ],
        "properties": {
          "complexes": {
            "type": "array",
            "description": "Массив с объектами комплексов предказа для конкретной группы питания",
            "items": {
              "$ref": "#/components/schemas/PreorderComplexResponse"
            }
          },
          "group": {
            "type": "string",
            "description": "Название группы",
            "enum": [
              "Завтрак",
              "Обед",
              "Полдник",
              "Ужин"
            ]
          }
        },
        "description": "Группа меню предзаказа"
      },
      "LessonThemeResponse": {
        "type": "object",
        "required": [
          "id",
          "title"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор темы/дидактической единицы"
          },
          "theme_frames": {
            "type": "array",
            "description": "Вложенные темы/дидактические единицы",
            "items": {
              "$ref": "#/components/schemas/LessonThemeResponse"
            }
          },
          "title": {
            "type": "string",
            "description": "Название темы/дидактической единицы"
          }
        }
      },
      "HomeworkResponse": {
        "type": "object",
        "required": [
          "additional_materials",
          "comments",
          "date",
          "description",
          "homework_entry_student_id",
          "is_done",
          "lesson_date_time",
          "subject_id",
          "subject_name"
        ],
        "properties": {
          "additional_materials": {
            "type": "array",
            "description": "Массив дополнительных материалов к уроку",
            "items": {
              "$ref": "#/components/schemas/AdditionalMaterialResponse"
            }
          },
          "attachments": {
            "type": "array",
            "description": "Файлы, прикрепленные учеником",
            "items": {
              "$ref": "#/components/schemas/AttachmentSummaryResponse"
            }
          },
          "comments": {
            "type": "array",
            "description": "Комментарии к заданию",
            "items": {
              "type": "string"
            }
          },
          "date": {
            "type": "string",
            "description": "Дата, до которой надо сдать задание"
          },
          "date_assigned_on": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "description": {
            "type": "string",
            "description": "Описание домашнего задания"
          },
          "homework_entry_student_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор Д.З. ученика"
          },
          "is_done": {
            "type": "boolean",
            "example": false,
            "description": "Отметка о выполнении"
          },
          "lesson_date_time": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "subject_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор предмета"
          },
          "subject_name": {
            "type": "string",
            "description": "Название предмета"
          }
        }
      },
      "TeacherNameResponse": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "Имя"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество"
          }
        }
      },
      "MenuOfBuffetDateItemResponse": {
        "type": "object",
        "required": [
          "date"
        ],
        "properties": {
          "date": {
            "$ref": "#/components/schemas/XMLGregorianCalendar"
          },
          "items": {
            "type": "array",
            "description": "Элементы меню",
            "items": {
              "$ref": "#/components/schemas/MenuOfBuffetItemResponse"
            }
          }
        }
      },
      "SimpleScheduleItemResponse": {
        "type": "object",
        "required": [
          "begin_time",
          "bell_id",
          "end_time",
          "subject_name"
        ],
        "properties": {
          "absence_reason_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор причины отсутствия"
          },
          "begin_time": {
            "type": "string",
            "description": "Время начала урока"
          },
          "bell_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор элемента расписания"
          },
          "end_time": {
            "type": "string",
            "description": "Время окончания урока"
          },
          "evaluation": {
            "type": "string",
            "description": "Оценка урока",
            "enum": [
              "LIKE",
              "DISLIKE"
            ]
          },
          "group_name": {
            "type": "string",
            "description": "Название группы (в ДО нет предмета. только название группы)"
          },
          "is_virtual": {
            "type": "boolean",
            "example": false,
            "description": "Флаг урока виртуального помощника"
          },
          "lesson_education_type": {
            "type": "string",
            "description": "Тип урока ОО(общее), AE(доп), EC(внеурочка)"
          },
          "lesson_type": {
            "type": "string",
            "description": "Тип урока NORMAL, REMOTE, ELECTRONIC"
          },
          "subject_name": {
            "type": "string",
            "description": "Наименование предмета"
          }
        }
      },
      "LessonRemoteResponse": {
        "type": "object",
        "properties": {
          "link_to_join": {
            "type": "string",
            "description": "Ссылка для присоединения к дистанционному уроку"
          },
          "link_to_record": {
            "type": "string",
            "description": "Ссылка на запись урока"
          },
          "record_preview": {
            "type": "string",
            "description": "Ссылка на превью записи урока"
          }
        }
      },
      "Subscription": {
        "type": "object",
        "required": [
          "id",
          "parentProfileId",
          "sendTime",
          "studentProfileId",
          "type"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "ID подписки"
          },
          "parentProfileId": {
            "type": "integer",
            "format": "int32",
            "description": "ID профиля родителя"
          },
          "parentSsoId": {
            "type": "string",
            "description": "SSO родителя"
          },
          "sendTime": {
            "type": "string",
            "description": "Время рассылки(указывает пользователь, только для мобилок)"
          },
          "studentProfileId": {
            "type": "integer",
            "format": "int32",
            "description": "ID профиля учащегося"
          },
          "studentSsoId": {
            "type": "string",
            "description": "SSO учащегося"
          },
          "type": {
            "type": "string",
            "description": "Тип подписки",
            "enum": [
              "MARKS",
              "EXAMS",
              "MOBILE_HOMEWORKS",
              "MOBILE_MARKS"
            ]
          }
        },
        "description": "Подписка"
      },
      "NotificationStatus": {
        "type": "object",
        "properties": {
          "status": {
            "type": "boolean",
            "example": false,
            "description": "Статус нотификации"
          }
        },
        "description": "Статус нотификации"
      },
      "AddressResponse": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "description": "Адрес"
          },
          "county": {
            "type": "string",
            "description": "Округ"
          },
          "district": {
            "type": "string",
            "description": "Район"
          }
        }
      },
      "PersonInfoResponse": {
        "type": "object",
        "properties": {
          "birthdate": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "documents": {
            "type": "array",
            "description": "Информация о документе персоны",
            "items": {
              "$ref": "#/components/schemas/PersonDocumentResponse"
            }
          },
          "first_name": {
            "type": "string",
            "description": "Имя"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия"
          },
          "sex": {
            "type": "integer",
            "format": "int32",
            "description": "Пол"
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          }
        }
      },
      "AttachmentSummaryResponse": {
        "type": "object",
        "required": [
          "link",
          "title"
        ],
        "properties": {
          "accepted_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "author": {
            "type": "string",
            "description": "Автор материала"
          },
          "average_rating": {
            "type": "number",
            "format": "float",
            "description": "Рейтинг материала"
          },
          "class_level_ids": {
            "type": "array",
            "description": "Уровни классов",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "created_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "file_size": {
            "type": "integer",
            "format": "int64",
            "description": "Размер файла"
          },
          "for_home": {
            "type": "boolean",
            "example": false,
            "description": "На дом"
          },
          "for_lesson": {
            "type": "boolean",
            "example": false,
            "description": "К уроку"
          },
          "full_cover_url": {
            "type": "string",
            "description": "Ссылка на обложку"
          },
          "icon_url": {
            "type": "string",
            "description": "Ссылка на миниатюру обложки"
          },
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "is_hidden_from_students": {
            "type": "boolean",
            "example": false,
            "description": "Видимость для студента"
          },
          "link": {
            "type": "string",
            "description": "Ссылка"
          },
          "progress": {
            "type": "number",
            "format": "double",
            "description": "Процент выполнения"
          },
          "status": {
            "type": "string",
            "description": "Статус выполнения ЦДЗ",
            "enum": [
              "NEW",
              "IN_PROGRESS",
              "COMPLETED",
              "INCOMPLETED"
            ]
          },
          "title": {
            "type": "string",
            "description": "Заголовок"
          },
          "updated_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "urls": {
            "type": "array",
            "description": "Ссылки на материалы ЕОМ",
            "items": {
              "$ref": "#/components/schemas/Urls"
            }
          },
          "user_name": {
            "type": "string",
            "description": "Имя пользователя, загрузившего материал"
          },
          "views": {
            "type": "integer",
            "format": "int32",
            "description": "Количество просмотров"
          }
        }
      },
      "LocalTime": {
        "type": "object",
        "properties": {
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "LessonHomeworkResponse": {
        "type": "object",
        "required": [
          "homework_entry_student_id",
          "is_done"
        ],
        "properties": {
          "attachments": {
            "type": "array",
            "description": "Файлы, прикрепленные учеником",
            "items": {
              "$ref": "#/components/schemas/AttachmentSummaryResponse"
            }
          },
          "date_assigned_on": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "date_prepared_for": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "homework": {
            "type": "string",
            "description": "Домашнее задание"
          },
          "homework_created_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "homework_entry_student_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор Д.З. ученика"
          },
          "homework_updated_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "is_done": {
            "type": "boolean",
            "example": false,
            "description": "Отметка о выполении"
          },
          "materials": {
            "type": "array",
            "description": "Массив материалов к заданию",
            "items": {
              "$ref": "#/components/schemas/AdditionalMaterialResponse"
            }
          },
          "written_answer": {
            "$ref": "#/components/schemas/WrittenAnswerResponse"
          }
        }
      },
      "FeedbackRequestRequestDto": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Комментарий к рейтингу курса"
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "description": "Рейтинг курса"
          }
        }
      },
      "Urls": {
        "type": "object",
        "required": [
          "url",
          "url_type"
        ],
        "properties": {
          "url": {
            "type": "string",
            "description": "Ссылка"
          },
          "url_type": {
            "type": "string",
            "description": "Тип ссылки"
          }
        }
      },
      "MarkWithDateResponse": {
        "type": "object",
        "required": [
          "date",
          "id",
          "value",
          "weight"
        ],
        "properties": {
          "comment_exists": {
            "type": "boolean",
            "example": false,
            "description": "Флаг наличия комментария"
          },
          "control_form_name": {
            "type": "string",
            "example": "Контрольная работа",
            "description": "Наименование формы контроля"
          },
          "created_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "criteria": {
            "type": "array",
            "description": "Массив критериев оценки",
            "items": {
              "$ref": "#/components/schemas/MarkCriteriaResponse"
            }
          },
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор оценки"
          },
          "is_exam": {
            "type": "boolean",
            "example": false,
            "description": "Признак экзамена (контрольной"
          },
          "is_point": {
            "type": "boolean",
            "example": false,
            "description": "Признак точки"
          },
          "updated_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "value": {
            "type": "string",
            "description": "Значение"
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "description": "Вес"
          }
        }
      },
      "HomeworkShortResponse": {
        "type": "object",
        "required": [
          "payload"
        ],
        "properties": {
          "payload": {
            "type": "array",
            "description": "Домашние задания сокращенно",
            "items": {
              "$ref": "#/components/schemas/SimpleHomeworkResponse"
            }
          }
        }
      },
      "FeedbackRequestResponse": {
        "type": "object",
        "properties": {
          "comment": {
            "type": "string",
            "description": "Текст отзыва"
          },
          "rating": {
            "type": "integer",
            "format": "int32",
            "description": "Рейтинг"
          }
        }
      },
      "AttendanceInfoNotificationRequest": {
        "type": "object",
        "required": [
          "date",
          "reason_id"
        ],
        "properties": {
          "bell_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор элемента расписания (отсутствует, если уведомление на всю дату, а не конкретный урок)"
          },
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "reason_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор причины пропуска. 1-По болезни, 2-Плохое самочувствие, 3-По семейным обстоятельствам, 4-Укажите другую причину",
            "enum": [
              1,
              2,
              3,
              4
            ]
          }
        }
      },
      "AttendanceNotificationRemovalRequest": {
        "type": "object",
        "required": [
          "notifications",
          "student_id"
        ],
        "properties": {
          "notifications": {
            "type": "array",
            "description": "Уведомления по датам",
            "items": {
              "$ref": "#/components/schemas/AttendanceDateNotificationRequest"
            }
          },
          "student_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор учащегося"
          }
        }
      },
      "XMLGregorianCalendar": {
        "type": "object",
        "properties": {
          "day": {
            "type": "integer",
            "format": "int32"
          },
          "eon": {
            "type": "integer",
            "format": "int64"
          },
          "eonAndYear": {
            "type": "integer",
            "format": "int64"
          },
          "fractionalSecond": {
            "type": "number",
            "format": "double"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "millisecond": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "timezone": {
            "type": "integer",
            "format": "int32"
          },
          "valid": {
            "type": "boolean"
          },
          "xmlschemaType": {
            "$ref": "#/components/schemas/QName"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Era": {
        "type": "object",
        "properties": {
          "value": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "MarkCriteriaResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Наименование критерия"
          },
          "value": {
            "type": "string",
            "description": "Значение критерия"
          }
        }
      },
      "MarkWithSubjectListResponse": {
        "type": "object",
        "required": [
          "payload"
        ],
        "properties": {
          "payload": {
            "type": "array",
            "description": "Список оценок",
            "items": {
              "$ref": "#/components/schemas/MarkWithSubjectResponse"
            }
          }
        }
      },
      "EventItemResponse": {
        "type": "object",
        "required": [
          "address",
          "building_id",
          "description",
          "end_interval",
          "id",
          "is_targeting_children",
          "is_targeting_parents",
          "room_id",
          "start_date",
          "start_interval",
          "title",
          "type"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Адрес"
          },
          "building_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор строения"
          },
          "description": {
            "type": "string",
            "description": "Описание мероприятия"
          },
          "end_date": {
            "type": "string",
            "example": "2020-04-01",
            "description": "Конец мероприятия"
          },
          "end_interval": {
            "type": "string",
            "example": "13:00",
            "description": "Время окончания мероприятия"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор мероприятия"
          },
          "is_targeting_children": {
            "type": "boolean",
            "example": false,
            "description": "Признак мероприятия для детей"
          },
          "is_targeting_parents": {
            "type": "boolean",
            "example": false,
            "description": "Признак мероприятия для родителей"
          },
          "regularity_step": {
            "type": "integer",
            "format": "int32",
            "description": "Шаг регулярного повтора"
          },
          "regularity_type": {
            "type": "string",
            "description": "Тип регулярного повтора",
            "enum": [
              "D",
              "W",
              "M",
              "Y",
              "E"
            ]
          },
          "room_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор кабинета"
          },
          "start_date": {
            "type": "string",
            "example": "2020-04-01",
            "description": "Начало проведения"
          },
          "start_interval": {
            "type": "string",
            "example": "12:00",
            "description": "Время начала мероприятия"
          },
          "title": {
            "type": "string",
            "description": "Название мероприятия"
          },
          "type": {
            "type": "string",
            "description": "Тип мероприятия",
            "enum": [
              "EC",
              "AE",
              "OO"
            ]
          },
          "user_name": {
            "type": "string",
            "description": "Данные о преподавателе"
          }
        }
      },
      "ProgramTopicResponse": {
        "type": "object",
        "required": [
          "ordinal",
          "title"
        ],
        "properties": {
          "lessons": {
            "type": "array",
            "description": "Список уроков",
            "items": {
              "$ref": "#/components/schemas/ProgramLessonResponse"
            }
          },
          "ordinal": {
            "type": "integer",
            "format": "int32",
            "description": "Порядок темы"
          },
          "title": {
            "type": "string",
            "description": "Название темы модуля"
          }
        }
      },
      "RequestCreatingRequestDto": {
        "type": "object",
        "properties": {
          "applicant": {
            "$ref": "#/components/schemas/RequestCreatingPersonRequestDto"
          },
          "child": {
            "$ref": "#/components/schemas/RequestCreatingPersonRequestDto"
          },
          "child_sso_id": {
            "type": "string",
            "description": "SSO идентификатор ребенка"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий"
          },
          "date": {
            "type": "string",
            "description": "Дата регистрации заявления"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор услуги"
          },
          "parallel_id": {
            "type": "string",
            "description": "Идентификатор параллели"
          },
          "reason_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор причины записи"
          },
          "wish_schedules": {
            "type": "array",
            "description": "Желаемое расписание посещения",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ScheduleRequestDto"
              }
            }
          }
        }
      },
      "QrCodeResponse": {
        "type": "object",
        "properties": {
          "date_from": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "date_to": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "qr": {
            "type": "string",
            "description": "QR-код"
          }
        }
      },
      "ActivityLessonResponse": {
        "type": "object",
        "required": [
          "begin_time",
          "begin_utc",
          "end_time",
          "end_utc",
          "lesson",
          "type"
        ],
        "properties": {
          "begin_time": {
            "type": "string",
            "description": "Время начала урока"
          },
          "begin_utc": {
            "type": "integer",
            "format": "int64",
            "description": "Точное время начала в UTC"
          },
          "building_name": {
            "type": "string",
            "description": "Название корпуса"
          },
          "end_time": {
            "type": "string",
            "description": "Время окончания урока"
          },
          "end_utc": {
            "type": "integer",
            "format": "int64",
            "description": "Точное время окончания в UTC"
          },
          "info": {
            "type": "string",
            "description": "Краткая информация"
          },
          "lesson": {
            "$ref": "#/components/schemas/ActivityScheduleItemResponse"
          },
          "room_name": {
            "type": "string",
            "description": "Название кабинета"
          },
          "room_number": {
            "type": "string",
            "description": "Номер кабинета"
          },
          "type": {
            "type": "string",
            "description": "Тип (урок/перемена)",
            "enum": [
              "LESSON",
              "BREAK"
            ]
          }
        }
      },
      "LessonScheduleItemResponse": {
        "type": "object",
        "required": [
          "begin_time",
          "date",
          "details",
          "end_time",
          "id",
          "marks",
          "subject_id",
          "subject_name",
          "teacher"
        ],
        "properties": {
          "begin_time": {
            "type": "string",
            "description": "Время начала урока"
          },
          "building_name": {
            "type": "string",
            "description": "Название корпуса"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий к уроку"
          },
          "control": {
            "$ref": "#/components/schemas/LessonControlResponse"
          },
          "course_lesson_type": {
            "type": "string",
            "description": "Тип урока (обычный урок (может быть null), тематическая контрольная работа, модульная контрольная работа)",
            "enum": [
              "LESSON",
              "THEMATIC_TEST",
              "MODULE_TEST",
              "LAB",
              "PRACTICE"
            ]
          },
          "created_date_time": {
            "type": "string",
            "description": "Дата создания урока"
          },
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "details": {
            "$ref": "#/components/schemas/LessonDetailResponse"
          },
          "end_time": {
            "type": "string",
            "description": "Время окончания урока"
          },
          "evaluation": {
            "type": "string",
            "description": "Оценка урока",
            "enum": [
              "LIKE",
              "DISLIKE"
            ]
          },
          "field_name": {
            "type": "string",
            "description": "Направленность ДО или ВД"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор урока"
          },
          "is_missed_lesson": {
            "type": "boolean",
            "example": false,
            "description": "Признак пропуска урока"
          },
          "is_virtual": {
            "type": "boolean",
            "example": false,
            "description": "Флаг урока виртуального помощника"
          },
          "lesson_homeworks": {
            "type": "array",
            "description": "Блоки домашнего задания",
            "items": {
              "$ref": "#/components/schemas/LessonHomeworkResponse"
            }
          },
          "lesson_type": {
            "type": "string",
            "description": "Тип урока NORMAL, REMOTE, ELECTRONIC"
          },
          "marks": {
            "type": "array",
            "description": "Отметки",
            "items": {
              "$ref": "#/components/schemas/SimpleMarkResponse"
            }
          },
          "remote_lesson": {
            "$ref": "#/components/schemas/LessonRemoteResponse"
          },
          "room_name": {
            "type": "string",
            "description": "Название кабинета"
          },
          "room_number": {
            "type": "string",
            "description": "Номер кабинета"
          },
          "subject_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор предмета"
          },
          "subject_name": {
            "type": "string",
            "description": "Наименование предмета"
          },
          "teacher": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "RequestResponse": {
        "type": "object",
        "properties": {
          "class": {
            "$ref": "#/components/schemas/RequestClassResponse"
          },
          "date": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "decline_comment": {
            "type": "string",
            "description": "Комментарий к отказу по заявлению"
          },
          "decline_reason": {
            "type": "string",
            "description": "Причина отказа по заявлению"
          },
          "decline_reason_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор отказа по заявлению"
          },
          "expulsion_reason": {
            "type": "string",
            "description": "Причина исключения"
          },
          "expulsion_reason_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор исключения"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор заявления"
          },
          "number": {
            "type": "string",
            "description": "Номер заявления"
          },
          "registration_date": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "request_status": {
            "type": "string",
            "description": "Статус заявления"
          },
          "request_status_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор статуса заявления"
          },
          "service": {
            "$ref": "#/components/schemas/RequestServiceResponse"
          }
        }
      },
      "RequestClassResponse": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Код группы обучения"
          },
          "finish_date": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор группы обучения"
          },
          "name": {
            "type": "string",
            "description": "Наименование группы обучения"
          },
          "schedules": {
            "type": "array",
            "description": "Расписание проведения занятий",
            "items": {
              "$ref": "#/components/schemas/RequestScheduleResponse"
            }
          },
          "start_date": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "teacher": {
            "type": "string",
            "description": "Ведущий преподаватель"
          }
        }
      },
      "SignedUrlResponse": {
        "type": "object",
        "required": [
          "url"
        ],
        "properties": {
          "url": {
            "type": "string"
          }
        },
        "description": "Урл"
      },
      "SimpleScheduleDateListResponse": {
        "type": "object",
        "required": [
          "payload"
        ],
        "properties": {
          "payload": {
            "type": "array",
            "description": "Расписание по датам",
            "items": {
              "$ref": "#/components/schemas/SimpleScheduleDateResponse"
            }
          }
        }
      },
      "AttendanceListResponse": {
        "type": "object",
        "required": [
          "attendance",
          "days_count",
          "year_description"
        ],
        "properties": {
          "attendance": {
            "type": "array",
            "description": "Пропуски",
            "items": {
              "$ref": "#/components/schemas/AttendanceResponse"
            }
          },
          "days_count": {
            "type": "integer",
            "format": "int32",
            "description": "Количество пропущенных дней"
          },
          "year_description": {
            "type": "string",
            "example": "2018 - 2019 год",
            "description": "Учебный год"
          }
        }
      },
      "ServiceResponse": {
        "type": "object",
        "properties": {
          "available_schedules": {
            "type": "array",
            "description": "Расписания активных групп обучения, действующих на услуге, в которых есть места",
            "items": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ScheduleRequestDto"
              }
            }
          },
          "classificator_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор классификатора"
          },
          "classificator_name": {
            "type": "string",
            "description": "Наименование классификатора"
          },
          "contacts": {
            "type": "array",
            "description": "Контактные лица",
            "items": {
              "$ref": "#/components/schemas/ServiceContactPersonResponse"
            }
          },
          "description": {
            "type": "string",
            "description": " Наименование услуги (заголовок)"
          },
          "duration": {
            "$ref": "#/components/schemas/DurationResponse"
          },
          "finansing": {
            "type": "integer",
            "format": "int32",
            "description": "Тип финансирования (платно/бесплатно)"
          },
          "finansing_description": {
            "type": "string",
            "description": "Стоимость оказания услуги"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор услуги"
          },
          "is_open": {
            "type": "boolean",
            "example": false,
            "description": "Флаг наличия набора"
          },
          "lesson_form_id": {
            "type": "integer",
            "format": "int32",
            "description": "Форма предоставления услуги (1 - групповая, 2 - индивидуальная)"
          },
          "lesson_per_week": {
            "type": "integer",
            "format": "int32",
            "description": "Количество занятий в неделю"
          },
          "organization": {
            "$ref": "#/components/schemas/ServiceOrganizationResponse"
          },
          "programm_level": {
            "type": "string",
            "description": "Уровень программы"
          },
          "programm_level_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор уровня программы (44 - Основная образовательная программа; 45 - Подготовка к ЕГЭ/ГИА; 46 - Подготовка к олимпиадам)"
          },
          "programm_service": {
            "type": "string",
            "description": "Программа обучения"
          },
          "programm_short_name": {
            "type": "string",
            "description": "Программа обучения"
          },
          "schedule_type": {
            "type": "integer",
            "format": "int32",
            "description": "Тип расписания предоставления услуги (общее/индивидуальное)"
          },
          "sum_per_lesson": {
            "type": "number",
            "format": "float",
            "description": "Сумма оплаты за занятие"
          }
        }
      },
      "TransactionResponse": {
        "type": "object",
        "required": [
          "amount",
          "items",
          "time",
          "type"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "Сумма (в копейках) пополнения или покупки"
          },
          "items": {
            "type": "array",
            "description": "Детали покупки",
            "items": {
              "$ref": "#/components/schemas/TransactionItemResponse"
            }
          },
          "time": {
            "type": "string",
            "description": "Время транзакции"
          },
          "type": {
            "type": "string",
            "description": "Тип. TOPUP - пополнение, DINING - столовая, BUFFET - буфет, MIXED - столовая и буфет",
            "enum": [
              "TOPUP",
              "DINING",
              "BUFFET",
              "MIXED"
            ]
          }
        }
      },
      "ParallelCurriculumResponse": {
        "type": "object",
        "required": [
          "hours",
          "title"
        ],
        "properties": {
          "class_level_id": {
            "type": "integer",
            "format": "int32",
            "description": "ID параллели"
          },
          "comments": {
            "type": "string",
            "description": "Комментарий"
          },
          "days_in_week": {
            "type": "integer",
            "format": "int32",
            "description": "Кол-во учебных дней в неделе для плана параллели"
          },
          "education_form": {
            "type": "string",
            "description": "Форма обучения",
            "enum": [
              "FULL_TIME_ABSENTIA",
              "ABSENTIA",
              "FULL_TIME"
            ]
          },
          "education_level": {
            "type": "string",
            "description": "Уровнь образования"
          },
          "hours": {
            "type": "integer",
            "format": "int32",
            "description": "Кол-во часов в УП"
          },
          "is_adapted": {
            "type": "boolean",
            "example": false,
            "description": "Признак адаптивности УП"
          },
          "sections": {
            "type": "array",
            "description": "Области знания",
            "items": {
              "$ref": "#/components/schemas/ParallelCurriculumSection"
            }
          },
          "short_name": {
            "type": "string",
            "description": "Краткое имя плана параллели"
          },
          "specialization": {
            "type": "string",
            "description": "Специализация учебного плана"
          },
          "study_profile": {
            "type": "string",
            "description": "Учебный профиль"
          },
          "title": {
            "type": "string",
            "description": "Название УП"
          }
        },
        "description": "Учебный план"
      },
      "EzdProfileResponse": {
        "type": "object",
        "required": [
          "id",
          "last_name"
        ],
        "properties": {
          "birth_date": {
            "type": "string",
            "description": "Дата рождения"
          },
          "contract_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор контракта (для получения баланса)"
          },
          "email": {
            "type": "string",
            "description": "Электронная почта"
          },
          "first_name": {
            "type": "string",
            "description": "Имя"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор профиля пользователя"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество"
          },
          "phone": {
            "type": "string",
            "description": "Номер телефона"
          },
          "sex": {
            "type": "string",
            "description": "Пол",
            "enum": [
              "male",
              "female"
            ]
          },
          "snils": {
            "type": "string",
            "description": "СНИЛС"
          },
          "type": {
            "type": "string",
            "description": "Тип профиля"
          },
          "user_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор пользователя"
          }
        }
      },
      "LessonResponse": {
        "type": "object",
        "required": [
          "additional_materials",
          "begin_time",
          "date",
          "details",
          "end_time",
          "id",
          "marks",
          "subject_id",
          "subject_name",
          "teacher"
        ],
        "properties": {
          "additional_materials": {
            "type": "array",
            "description": "Массив дополнительных материалов к уроку",
            "items": {
              "$ref": "#/components/schemas/AdditionalMaterialResponse"
            }
          },
          "begin_time": {
            "type": "string",
            "description": "Время начала урока"
          },
          "building_name": {
            "type": "string",
            "description": "Название корпуса"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий к уроку"
          },
          "course_lesson_type": {
            "type": "string",
            "description": "Тип урока (обычный урок (может быть null), тематическая контрольная работа, модульная контрольная работа)",
            "enum": [
              "LESSON",
              "THEMATIC_TEST",
              "MODULE_TEST",
              "LAB",
              "PRACTICE"
            ]
          },
          "created_date_time": {
            "type": "string",
            "description": "Дата создания урока"
          },
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "details": {
            "$ref": "#/components/schemas/LessonDetailResponse"
          },
          "end_time": {
            "type": "string",
            "description": "Время окончания урока"
          },
          "field_name": {
            "type": "string",
            "description": "Направленность ДО или ВД"
          },
          "homework": {
            "type": "string",
            "description": "Домашнее задание"
          },
          "homework_created_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "homework_updated_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор урока"
          },
          "is_missed_lesson": {
            "type": "boolean",
            "example": false,
            "description": "Признак пропуска урока"
          },
          "lesson_homeworks": {
            "type": "array",
            "description": "Блоки домашнего задания",
            "items": {
              "$ref": "#/components/schemas/LessonHomeworkResponse"
            }
          },
          "lesson_type": {
            "type": "string",
            "description": "Тип урока NORMAL, REMOTE, ELECTRONIC"
          },
          "marks": {
            "type": "array",
            "description": "Отметки",
            "items": {
              "$ref": "#/components/schemas/SimpleMarkResponse"
            }
          },
          "room_name": {
            "type": "string",
            "description": "Название кабинета"
          },
          "room_number": {
            "type": "string",
            "description": "Номер кабинета"
          },
          "subject_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор предмета"
          },
          "subject_name": {
            "type": "string",
            "description": "Наименование предмета"
          },
          "teacher": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "PreorderCalendarItemResponse": {
        "type": "object",
        "required": [
          "date",
          "edit_forbidden",
          "preorder_exists"
        ],
        "properties": {
          "date": {
            "type": "string",
            "example": "2020-12-30",
            "description": "Дата"
          },
          "edit_forbidden": {
            "type": "boolean",
            "example": false,
            "description": "Рабочий(false)/нерабочий день(true)"
          },
          "preorder_exists": {
            "type": "integer",
            "format": "int32",
            "description": "Количество предзаказов"
          }
        },
        "description": "Информация за день из календаря предзаказа"
      },
      "ServiceOrganizationResponse": {
        "type": "object",
        "properties": {
          "full_address": {
            "type": "string",
            "description": "Полный адрес"
          },
          "name": {
            "type": "string",
            "description": "Наименование организации"
          }
        }
      },
      "WrittenAnswerResponse": {
        "type": "object",
        "properties": {
          "answer_date_time": {
            "type": "string",
            "description": "Дата и время письменного ответа"
          },
          "comments": {
            "$ref": "#/components/schemas/WrittenAnswerCommentResponse"
          },
          "text": {
            "type": "string",
            "description": "Текст письменного ответа"
          }
        }
      },
      "IsoChronology": {
        "type": "object",
        "properties": {
          "calendarType": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "LessonControlResponse": {
        "type": "object",
        "properties": {
          "attested_files": {
            "type": "array",
            "description": "Файлы выполненной работы",
            "items": {
              "$ref": "#/components/schemas/ControlFileResponse"
            }
          },
          "comment": {
            "type": "string",
            "description": "Комментарий к контрольной работе"
          },
          "mark": {
            "$ref": "#/components/schemas/SimpleMarkResponse"
          },
          "remote_lesson": {
            "type": "integer",
            "format": "int32",
            "description": "Номер варианта"
          }
        }
      },
      "SimpleMarkResponse": {
        "type": "object",
        "required": [
          "id",
          "value",
          "weight"
        ],
        "properties": {
          "comment_exists": {
            "type": "boolean",
            "example": false,
            "description": "Флаг наличия комментария"
          },
          "control_form_name": {
            "type": "string",
            "example": "Контрольная работа",
            "description": "Наименование формы контроля"
          },
          "created_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "criteria": {
            "type": "array",
            "description": "Массив критериев оценки",
            "items": {
              "$ref": "#/components/schemas/MarkCriteriaResponse"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор оценки"
          },
          "is_exam": {
            "type": "boolean",
            "example": false,
            "description": "Признак экзамена (контрольной"
          },
          "is_point": {
            "type": "boolean",
            "example": false,
            "description": "Признак точки"
          },
          "updated_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "value": {
            "type": "string",
            "description": "Значение"
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "description": "Вес"
          }
        }
      },
      "StatusResponse": {
        "type": "object",
        "required": [
          "students"
        ],
        "properties": {
          "students": {
            "type": "array",
            "description": "Статусы учеников",
            "items": {
              "$ref": "#/components/schemas/StudentStatusResponse"
            }
          }
        }
      },
      "VisitsListResponse": {
        "type": "object",
        "required": [
          "payload"
        ],
        "properties": {
          "payload": {
            "type": "array",
            "description": "Список проходов ученика",
            "items": {
              "$ref": "#/components/schemas/DateVisitResponse"
            }
          }
        }
      },
      "ScheduleRequestDto": {
        "type": "object",
        "properties": {
          "day": {
            "type": "integer",
            "format": "int32",
            "description": "День недели, цифра от 1 до 7"
          },
          "finish_at": {
            "type": "string",
            "description": "Время окончания"
          },
          "start_at": {
            "type": "string",
            "description": "Время начала"
          }
        }
      },
      "TeacherSubjectResponse": {
        "type": "object",
        "properties": {
          "first_name": {
            "type": "string",
            "description": "Имя"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество"
          },
          "subject_names": {
            "type": "array",
            "description": "Названия предметов",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "BalanceResponse": {
        "type": "object",
        "required": [
          "balance",
          "days"
        ],
        "properties": {
          "balance": {
            "type": "integer",
            "format": "int64",
            "description": "Баланс (в копейках)"
          },
          "days": {
            "type": "array",
            "description": "Детализация",
            "items": {
              "$ref": "#/components/schemas/TransactionDayResponse"
            }
          },
          "hasNextPage": {
            "type": "boolean"
          }
        }
      },
      "AcceptPreorderTermsRequest": {
        "type": "object",
        "required": [
          "contract_id"
        ],
        "properties": {
          "contract_id": {
            "type": "integer",
            "format": "int64",
            "description": "Лицевой счёт"
          },
          "phone": {
            "type": "string",
            "description": "Номер телефона законного представителя"
          }
        },
        "description": "Согласие представителя на получение обучающимся услуги предзаказа"
      },
      "StudentProfileResponse": {
        "type": "object",
        "required": [
          "class_level_id",
          "class_name",
          "class_unit_id",
          "groups",
          "id",
          "last_name",
          "representatives",
          "school",
          "sections"
        ],
        "properties": {
          "birth_date": {
            "type": "string",
            "description": "Дата рождения"
          },
          "class_level_id": {
            "type": "integer",
            "format": "int32",
            "description": "ID параллели"
          },
          "class_name": {
            "type": "string",
            "description": "Класс"
          },
          "class_unit_id": {
            "type": "integer",
            "format": "int32",
            "description": "ID класса"
          },
          "contingent_guid": {
            "type": "string",
            "description": "Идентификатор МЭШ.Контингент"
          },
          "contract_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор контракта (для получения баланса)"
          },
          "email": {
            "type": "string",
            "description": "Электронная почта"
          },
          "first_name": {
            "type": "string",
            "description": "Имя"
          },
          "groups": {
            "type": "array",
            "description": "Группы ученика",
            "items": {
              "$ref": "#/components/schemas/StudentProfileGroupResponse"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор профиля пользователя"
          },
          "is_legal_representative": {
            "type": "boolean",
            "example": false,
            "description": "Является ли законным представителем родитель (обязателен под родителем)"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество"
          },
          "parallel_curriculum_id": {
            "type": "integer",
            "format": "int32",
            "description": "ID учебного плана, к которому прикреплен ребенок"
          },
          "phone": {
            "type": "string",
            "description": "Номер телефона"
          },
          "representatives": {
            "type": "array",
            "description": "Представители",
            "items": {
              "$ref": "#/components/schemas/EzdProfileResponse"
            }
          },
          "school": {
            "$ref": "#/components/schemas/SchoolResponse"
          },
          "sections": {
            "type": "array",
            "description": "Кружки и секкции",
            "items": {
              "$ref": "#/components/schemas/StudentProfileGroupResponse"
            }
          },
          "sex": {
            "type": "string",
            "description": "Пол",
            "enum": [
              "male",
              "female"
            ]
          },
          "snils": {
            "type": "string",
            "description": "СНИЛС"
          },
          "sudir_account_exists": {
            "type": "boolean",
            "example": false,
            "description": "Флаг, указывающий, есть ли аккаунт в Sudir (обязателен под родителем)"
          },
          "sudir_login": {
            "type": "string",
            "description": "Логин в Sudir (обязателен под родителем)"
          },
          "type": {
            "type": "string",
            "description": "Тип профиля"
          },
          "user_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор пользователя"
          }
        },
        "x-examples": {
          "example-1": {
            "value": {
              "birth_date": "string",
              "class_level_id": -2147483648,
              "class_name": "string",
              "class_unit_id": -2147483648,
              "contingent_guid": "string",
              "contract_id": -9223372036854776000,
              "email": "string",
              "first_name": "string",
              "groups": [
                {
                  "id": 0,
                  "name": "string",
                  "subject_id": 0
                }
              ],
              "id": -9223372036854776000,
              "is_legal_representative": false,
              "last_name": "string",
              "middle_name": "string",
              "parallel_curriculum_id": -2147483648,
              "phone": "string",
              "representatives": [
                {
                  "birth_date": "string",
                  "contract_id": 0,
                  "email": "string",
                  "first_name": "string",
                  "id": 0,
                  "last_name": "string",
                  "middle_name": "string",
                  "phone": "string",
                  "sex": "male",
                  "snils": "string",
                  "type": "string",
                  "user_id": 0
                }
              ],
              "school": {
                "county": "string",
                "id": 0,
                "name": "string",
                "phone": "string",
                "principal": "string",
                "short_name": "string"
              },
              "sections": [
                {
                  "id": 0,
                  "name": "string",
                  "subject_id": 0
                }
              ],
              "sex": "male",
              "snils": "string",
              "sudir_account_exists": false,
              "sudir_login": "string",
              "type": "string",
              "user_id": -9223372036854776000
            }
          }
        }
      },
      "PreorderMealResponse": {
        "type": "object",
        "required": [
          "amount",
          "code",
          "full_name",
          "id",
          "is_available",
          "is_available_for_regular",
          "is_regular",
          "name",
          "nutrition",
          "output",
          "price"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Количество единиц предаза: 0 - не предзаказан || >= 1 - количество предзаказов"
          },
          "code": {
            "type": "string",
            "description": "Код блюда"
          },
          "full_name": {
            "type": "string",
            "description": "Полное название блюда"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор блюда"
          },
          "is_available": {
            "type": "boolean",
            "example": false,
            "description": "Включенность блюда в меню"
          },
          "is_available_for_regular": {
            "type": "boolean",
            "example": false,
            "description": "Возможность предзаказа с повторением"
          },
          "is_regular": {
            "type": "boolean",
            "example": false,
            "description": "Признак повторения заказа"
          },
          "name": {
            "type": "string",
            "description": "Название блюда"
          },
          "nutrition": {
            "$ref": "#/components/schemas/NutritionResponse"
          },
          "output": {
            "type": "string",
            "description": "Масса в граммах"
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "description": "Цена комплекса в копейках"
          },
          "state": {
            "type": "boolean",
            "example": false,
            "description": "Статус удаления заказа: false - не удален || true - удален"
          }
        },
        "description": "Блюдо комплекса"
      },
      "PreorderMealRequest": {
        "type": "object",
        "required": [
          "amount",
          "id"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Количество единиц предзаказа: 0 - не предзаказан || >= 1 - количество предзаказов"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор блюда"
          },
          "regular": {
            "$ref": "#/components/schemas/PreorderRegularRequest"
          }
        },
        "description": "Блюдо комплекса"
      },
      "SubjectFinalMarkResponse": {
        "type": "object",
        "properties": {
          "created_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "deleted_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "final_value": {
            "type": "string",
            "description": "Значение итоговой оценки"
          },
          "subject_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор предмета"
          },
          "subject_name": {
            "type": "string",
            "description": "Название предмета"
          },
          "updated_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          }
        }
      },
      "PreorderRegularRequest": {
        "type": "object",
        "required": [
          "is_enabled",
          "on_days"
        ],
        "properties": {
          "end_at": {
            "type": "string"
          },
          "is_enabled": {
            "type": "boolean",
            "example": false,
            "description": "Признак регрулярного предзаказа на комплекс"
          },
          "on_days": {
            "type": "array",
            "description": "Список дней недели, на которые сделан повтор",
            "items": {
              "type": "string",
              "enum": [
                "Mon",
                "Tue",
                "Wed",
                "Thu",
                "Fri",
                "Sat"
              ]
            }
          },
          "start_at": {
            "type": "string"
          }
        },
        "description": "Потовр на комплекс"
      },
      "AcademicYearsResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "array",
            "description": "Список оценок по предметам",
            "items": {
              "$ref": "#/components/schemas/AcademicYearMarksResponse"
            }
          }
        },
        "description": "Итоговые оценки"
      },
      "PreorderComplexResponse": {
        "type": "object",
        "required": [
          "amount",
          "id",
          "is_customizable",
          "is_discount_complex",
          "is_regular",
          "meals",
          "name",
          "price",
          "state"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Количество единиц предаза: 0 - не предзаказан || >= 1 - количество предзаказов"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор комплекса меню предзаказа"
          },
          "is_customizable": {
            "type": "boolean",
            "example": false,
            "description": "Флаг, указывающий на возможность выбора блюд комплекса по отдельности. false - заказ только всего комплекса / true - возможность выбора блюд"
          },
          "is_discount_complex": {
            "type": "boolean",
            "example": false,
            "description": "Признак бесплатного питания"
          },
          "is_regular": {
            "type": "boolean",
            "example": false,
            "description": "Признак повторения заказа"
          },
          "meals": {
            "type": "array",
            "description": "Массив с объектами блюд комплекса",
            "items": {
              "$ref": "#/components/schemas/PreorderMealResponse"
            }
          },
          "name": {
            "type": "string",
            "example": "Завтрак 1-1",
            "description": "Название комплекса"
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "description": "Цена комплекса в копейках"
          },
          "state": {
            "type": "boolean",
            "example": false,
            "description": "Статус удаления заказа: false - не удален || true - удален"
          }
        }
      },
      "SimpleActivityResponse": {
        "type": "object",
        "required": [
          "schedule_item_id"
        ],
        "properties": {
          "lesson_topic": {
            "type": "string",
            "description": "Тема урока"
          },
          "schedule_item_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор урока"
          }
        }
      },
      "AttendanceNotificationRequest": {
        "type": "object",
        "required": [
          "notifications",
          "student_id"
        ],
        "properties": {
          "notifications": {
            "type": "array",
            "description": "Уведомления по датам",
            "items": {
              "$ref": "#/components/schemas/AttendanceInfoNotificationRequest"
            }
          },
          "student_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор учащегося"
          }
        }
      },
      "ScheduleResponse": {
        "type": "object",
        "required": [
          "activities",
          "date",
          "has_homework"
        ],
        "properties": {
          "activities": {
            "$ref": "#/components/schemas/ActivityLessonResponse"
          },
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "has_homework": {
            "type": "boolean",
            "example": false,
            "description": "Признак наличия домашнего задания на следующий день"
          },
          "summary": {
            "type": "string",
            "example": "6 уроков",
            "description": "Сводная информация"
          }
        }
      },
      "NewsListResponse": {
        "type": "object",
        "required": [
          "payload"
        ],
        "properties": {
          "payload": {
            "type": "array",
            "description": "Новости (отсортированы по дате, от более свежих к более старым)",
            "items": {
              "$ref": "#/components/schemas/NewsResponse"
            }
          }
        }
      },
      "SchoolInfoResponse": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "address": {
            "$ref": "#/components/schemas/AddressResponse"
          },
          "branches": {
            "type": "array",
            "description": "Здания (филиалы) школы",
            "items": {
              "$ref": "#/components/schemas/BuildingResponse"
            }
          },
          "classroom_teachers": {
            "type": "array",
            "description": "Классные руководители заданного ученика",
            "items": {
              "$ref": "#/components/schemas/TeacherNameResponse"
            }
          },
          "email": {
            "type": "string",
            "description": "Электронная почта школы"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор школы"
          },
          "name": {
            "type": "string",
            "description": "Название школы"
          },
          "phone": {
            "type": "string",
            "description": "Телефон школы"
          },
          "principal": {
            "type": "string",
            "description": "Директор школы"
          },
          "teachers": {
            "type": "array",
            "description": "Учителя",
            "items": {
              "$ref": "#/components/schemas/TeacherSubjectResponse"
            }
          },
          "type": {
            "type": "string",
            "description": "Тип учебного заведения"
          },
          "website_link": {
            "type": "string",
            "description": "Сайт школы"
          }
        }
      },
      "TransactionDayResponse": {
        "type": "object",
        "required": [
          "date",
          "expense",
          "transactions"
        ],
        "properties": {
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "expense": {
            "type": "integer",
            "format": "int64",
            "description": "Расходы за день"
          },
          "transactions": {
            "type": "array",
            "description": "Детализация за день",
            "items": {
              "$ref": "#/components/schemas/TransactionResponse"
            }
          }
        }
      },
      "AcademicYearMarksResponse": {
        "type": "object",
        "properties": {
          "first_half_year": {
            "type": "string",
            "description": "Год первой половины учебного года"
          },
          "marks": {
            "type": "array",
            "description": "Список оценок по предметам",
            "items": {
              "$ref": "#/components/schemas/SubjectFinalMarkResponse"
            }
          },
          "second_half_year": {
            "type": "string",
            "description": "Год первой половины учебного года"
          }
        }
      },
      "ProxyLogRequest": {
        "type": "object",
        "required": [
          "details",
          "event",
          "profile_type",
          "source",
          "user_id"
        ],
        "properties": {
          "details": {
            "type": "string",
            "description": "Детали события"
          },
          "event": {
            "type": "string",
            "description": "Событие"
          },
          "profile_type": {
            "type": "string",
            "description": "Тип профиля"
          },
          "school_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор школы"
          },
          "source": {
            "type": "string",
            "description": "Источник события"
          },
          "user_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор пользователя"
          }
        }
      },
      "PreorderComplexesResponse": {
        "type": "object",
        "required": [
          "date"
        ],
        "properties": {
          "date": {
            "type": "string",
            "example": "2020-12-31",
            "description": "День, за который выдать комплексы предзаказа"
          },
          "groups": {
            "type": "array",
            "description": "Массив групп меню предзаказа (Завтрак, Обед, Полдник, Ужин)",
            "items": {
              "$ref": "#/components/schemas/PreorderGroupResponse"
            }
          },
          "regular": {
            "type": "array",
            "description": "Массив объектов с данными о предзаказе",
            "items": {
              "$ref": "#/components/schemas/PreorderRegularResponse"
            }
          }
        },
        "description": "Предзаказ по дням"
      },
      "SimpleAdditionalMaterialResponse": {
        "type": "object",
        "required": [
          "amount",
          "link_type"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Количество материалов"
          },
          "link_type": {
            "type": "string",
            "description": "Тип доп. материала",
            "enum": [
              "lesson_template",
              "game_app",
              "test_specification",
              "spec",
              "composed_document",
              "books",
              "attachment"
            ]
          }
        }
      },
      "SudirValue": {
        "type": "object",
        "required": [
          "value"
        ],
        "properties": {
          "value": {
            "type": "string",
            "description": "Значение (пароль или логин)"
          }
        },
        "description": "Новый пароль от учетной записи ребенка в СУДИР"
      },
      "BillingResponse": {
        "type": "object",
        "required": [
          "balance",
          "payload"
        ],
        "properties": {
          "balance": {
            "type": "integer",
            "format": "int64",
            "description": "Баланс (в копейках)"
          },
          "payload": {
            "type": "array",
            "description": "Детализация",
            "items": {
              "$ref": "#/components/schemas/DailyBillingResponse"
            }
          }
        }
      },
      "WrittenAnswerCommentResponse": {
        "type": "object",
        "properties": {
          "comment_date_time": {
            "type": "string",
            "description": "Дата и время клмментария"
          },
          "text": {
            "type": "string",
            "description": "Тест"
          },
          "written_by": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "ProgramModuleResponse": {
        "type": "object",
        "required": [
          "ordinal",
          "title"
        ],
        "properties": {
          "ordinal": {
            "type": "integer",
            "format": "int32",
            "description": "Порядок модуля"
          },
          "title": {
            "type": "string",
            "description": "Название модуля"
          },
          "topics": {
            "type": "array",
            "description": "Список тем",
            "items": {
              "$ref": "#/components/schemas/ProgramTopicResponse"
            }
          }
        }
      },
      "DailyBillingResponse": {
        "type": "object",
        "required": [
          "date",
          "delta",
          "details"
        ],
        "properties": {
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "delta": {
            "type": "integer",
            "format": "int64",
            "description": "Изменение баланса за день"
          },
          "details": {
            "type": "array",
            "description": "Детализация за день",
            "items": {
              "$ref": "#/components/schemas/BillingDetailsResponse"
            }
          }
        }
      },
      "PersonDocumentResponse": {
        "type": "object",
        "properties": {
          "document_type_id": {
            "type": "integer",
            "format": "int32",
            "description": "Тип документа"
          },
          "issue_date": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "issuer": {
            "type": "string",
            "description": "Кем выдан"
          },
          "number": {
            "type": "string",
            "description": "Номер документа"
          },
          "series": {
            "type": "string",
            "description": "Серия документа"
          }
        }
      },
      "PreorderComplexRequest": {
        "type": "object",
        "required": [
          "amount",
          "complex_id"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Количество единиц предзаказа: 0 - не предзаказан || >= 1 - количество предзаказов"
          },
          "complex_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор комплекса меню предзаказа"
          },
          "meals": {
            "type": "array",
            "description": "Массив с объектами блюд комплекса",
            "items": {
              "$ref": "#/components/schemas/PreorderMealRequest"
            }
          },
          "regular": {
            "$ref": "#/components/schemas/PreorderRegularRequest"
          }
        },
        "description": "Предзаказ комплекса"
      },
      "DurationResponse": {
        "type": "object",
        "properties": {
          "day": {
            "type": "integer",
            "format": "int32",
            "description": "Количество дней"
          },
          "month": {
            "type": "integer",
            "format": "int32",
            "description": "Количество месяцев"
          },
          "week": {
            "type": "integer",
            "format": "int32",
            "description": "Количество недель"
          },
          "year": {
            "type": "integer",
            "format": "int32",
            "description": "Количество лет"
          }
        }
      },
      "NewsResponse": {
        "type": "object",
        "required": [
          "created",
          "description",
          "id",
          "tag",
          "title"
        ],
        "properties": {
          "audience": {
            "type": "array",
            "description": "Аудитория",
            "items": {
              "type": "string",
              "enum": [
                "admin",
                "all_staff",
                "author",
                "business_administrator",
                "deputy",
                "educator",
                "junior_educator",
                "in_school",
                "jury",
                "material_moderator",
                "material_viewer",
                "methologist",
                "mrko",
                "parent",
                "principal",
                "publisher",
                "school_admin",
                "security_admin",
                "staff",
                "student",
                "support",
                "teacher"
              ]
            }
          },
          "created": {
            "type": "string",
            "description": "Дата создания новости"
          },
          "description": {
            "type": "string",
            "description": "Содержимое новости"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор новости"
          },
          "tag": {
            "type": "string",
            "description": "Категория (тэг) новости"
          },
          "title": {
            "type": "string",
            "description": "Заголовок"
          }
        }
      },
      "ParallelCurriculumSubject": {
        "type": "object",
        "required": [
          "max_hours_per_week",
          "min_hours_per_week",
          "passed_hours",
          "subject_id",
          "subject_name",
          "total_hours"
        ],
        "properties": {
          "max_hours_per_week": {
            "type": "integer",
            "format": "int32",
            "description": "Кол-во часов в неделю максимальное"
          },
          "min_hours_per_week": {
            "type": "integer",
            "format": "int32",
            "description": "Кол-во часов в неделю минимальное"
          },
          "passed_hours": {
            "type": "integer",
            "format": "int32",
            "description": "Количество пройденных часов"
          },
          "subject_id": {
            "type": "integer",
            "format": "int32",
            "description": "ID предмета"
          },
          "subject_name": {
            "type": "string",
            "description": "Название предмета"
          },
          "total_hours": {
            "type": "integer",
            "format": "int32",
            "description": "Общее кол-во часов"
          }
        },
        "description": "Предмет учебного плана"
      },
      "ParallelCurriculumSection": {
        "type": "object",
        "required": [
          "knowledge_field_name"
        ],
        "properties": {
          "knowledge_field_name": {
            "type": "string",
            "description": "Название области знания"
          },
          "subjects": {
            "type": "array",
            "description": "Список предметов",
            "items": {
              "$ref": "#/components/schemas/ParallelCurriculumSubject"
            }
          }
        },
        "description": "Области знания"
      },
      "PreorderRegularResponse": {
        "type": "object",
        "required": [
          "complex_id",
          "on_days",
          "price"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int32",
            "description": "Количество единиц блюда"
          },
          "complex_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор комплекса меню предзаказа"
          },
          "end_at": {
            "type": "string"
          },
          "meal_code": {
            "type": "string",
            "description": "Код блюда"
          },
          "on_days": {
            "type": "array",
            "description": "Список дней недели, на которые сделан повтор",
            "items": {
              "type": "string",
              "enum": [
                "Mon",
                "Tue",
                "Wed",
                "Thu",
                "Fri",
                "Sat"
              ]
            }
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "description": "Цена блюда в копейках"
          },
          "start_at": {
            "type": "string"
          }
        },
        "description": "Повтор на комплекс"
      },
      "ServiceContactPersonResponse": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "description": "E-mail"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор контактного лица"
          },
          "name": {
            "type": "string",
            "description": "Имя контактного лица"
          },
          "phone": {
            "type": "string",
            "description": "Номер телефона"
          },
          "position": {
            "type": "string",
            "description": "Должность"
          }
        }
      },
      "CalendarResponse": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "description": {
            "type": "string"
          },
          "events": {
            "type": "array",
            "description": "Тип мероприятия за день. Пока приходит только тип \"TEST\" (к.р.)",
            "items": {
              "type": "string"
            }
          },
          "title": {
            "type": "string",
            "description": "Название учебного периода, в который входит день"
          },
          "type": {
            "type": "string",
            "description": "Тип дня",
            "enum": [
              "holiday",
              "workday",
              "vacation",
              "other"
            ]
          }
        }
      },
      "ExpenditureLimitRequest": {
        "type": "object",
        "required": [
          "contract_id",
          "limit"
        ],
        "properties": {
          "contract_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор контракта учащегося"
          },
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Размер дневного ограничения на затраты"
          }
        }
      },
      "MealResponse": {
        "type": "object",
        "properties": {
          "full_name": {
            "type": "string",
            "description": "Полное наименование блюда"
          },
          "ingredients": {
            "type": "string",
            "description": "Состав блюда, к примеру \"помидоры, огурцы, соль\""
          },
          "name": {
            "type": "string",
            "description": "Наименование блюда"
          },
          "nutrition": {
            "$ref": "#/components/schemas/NutritionResponse"
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "description": "Цена блюда в копейках"
          }
        }
      },
      "ProfileResponse": {
        "type": "object",
        "required": [
          "children",
          "hash",
          "profile"
        ],
        "properties": {
          "children": {
            "type": "array",
            "description": "Профили детей (если пользователь - учащийся, в массиве повторяется его профиль)",
            "items": {
              "$ref": "#/components/schemas/StudentProfileResponse"
            }
          },
          "hash": {
            "type": "string",
            "description": "Хеш ответа"
          },
          "profile": {
            "$ref": "#/components/schemas/EzdProfileResponse"
          }
        },
        "x-examples": {
          "User": {
            "value": {
              "profile": {
                "last_name": "Халева",
                "first_name": "Елена",
                "middle_name": "Юрьевна",
                "birth_date": "1979-09-24",
                "sex": null,
                "user_id": 9571147,
                "id": 9761699,
                "contract_id": null,
                "phone": "9161460259",
                "email": "haleva_elena@mail.ru",
                "snils": "027-512-824 39",
                "type": "parent"
              },
              "children": [
                {
                  "last_name": "Халева",
                  "first_name": "Екатерина",
                  "middle_name": "Александровна",
                  "birth_date": "2006-09-18",
                  "sex": "female",
                  "user_id": 356738,
                  "id": 437099,
                  "contract_id": 76502129,
                  "phone": "79663071313",
                  "email": "halevakata@gmail.com",
                  "snils": "186-906-350 10",
                  "type": null,
                  "school": {
                    "id": 59,
                    "name": "Государственное бюджетное общеобразовательное учреждение города Москвы \"Школа № 2045\"",
                    "short_name": "ГБОУ Школа № 2045",
                    "county": "Зеленоградский административный округ",
                    "principal": "Халева Анна Федоровна",
                    "phone": "(495) 123-67-09"
                  },
                  "class_name": "8-Г",
                  "class_level_id": 8,
                  "class_unit_id": 403491,
                  "groups": [
                    {
                      "id": 5373496,
                      "name": "Физическая культура 8Г 8г",
                      "subject_id": 20
                    },
                    {
                      "id": 5373498,
                      "name": "Физика 8Г 8г",
                      "subject_id": 56
                    },
                    {
                      "id": 5373499,
                      "name": "Избранные вопросы математики (геометрия) 8Г 8г",
                      "subject_id": 161019
                    },
                    {
                      "id": 5373500,
                      "name": "Биология 8Г 8г",
                      "subject_id": 57
                    },
                    {
                      "id": 5373502,
                      "name": "Химия 8Г 8г",
                      "subject_id": 58
                    },
                    {
                      "id": 5373504,
                      "name": "Родная литература 8Г 8г",
                      "subject_id": 131417
                    },
                    {
                      "id": 5373505,
                      "name": "Основы безопасности жизнедеятельности 8Г 8г",
                      "subject_id": 59
                    },
                    {
                      "id": 5373506,
                      "name": "Теория математической вероятности 8Г 8г",
                      "subject_id": 131868
                    },
                    {
                      "id": 5373508,
                      "name": "Литература 8Г 8г",
                      "subject_id": 33
                    },
                    {
                      "id": 5373510,
                      "name": "Математика 8Г 8г",
                      "subject_id": 8
                    },
                    {
                      "id": 5373511,
                      "name": "История России. Всеобщая история 8Г 8г",
                      "subject_id": 40
                    },
                    {
                      "id": 5373512,
                      "name": "Русский язык 8Г 8г",
                      "subject_id": 3177
                    },
                    {
                      "id": 5373513,
                      "name": "Обществознание 8Г 8г",
                      "subject_id": 44
                    },
                    {
                      "id": 5373514,
                      "name": "География 8Г",
                      "subject_id": 45
                    },
                    {
                      "id": 5373515,
                      "name": "Алгебра 8Г",
                      "subject_id": 46
                    },
                    {
                      "id": 5373495,
                      "name": "Геометрия 8Г 8г",
                      "subject_id": 47
                    },
                    {
                      "id": 5373497,
                      "name": "Родная литература (русская) 8Г 8г",
                      "subject_id": 156243
                    },
                    {
                      "id": 5538135,
                      "name": "Англ яз 2гр Чернухин 8г",
                      "subject_id": 144641
                    },
                    {
                      "id": 5541226,
                      "name": "Информатика 2 гр Берников 8г",
                      "subject_id": 32
                    },
                    {
                      "id": 5373503,
                      "name": "Второй иностранный язык (немецкий) 8Г 8г",
                      "subject_id": 144638
                    },
                    {
                      "id": 5914172,
                      "name": "Классный час 8Г 8г",
                      "subject_id": 156247
                    }
                  ],
                  "representatives": [
                    {
                      "last_name": "Халева",
                      "first_name": "Елена",
                      "middle_name": "Юрьевна",
                      "birth_date": null,
                      "sex": null,
                      "user_id": null,
                      "id": 9761699,
                      "contract_id": null,
                      "phone": "9161460259",
                      "email": "haleva_elena@mail.ru",
                      "snils": "027-512-824 39",
                      "type": null
                    },
                    {
                      "last_name": "Халев",
                      "first_name": "Александр",
                      "middle_name": "Викторович",
                      "birth_date": null,
                      "sex": null,
                      "user_id": null,
                      "id": 9761696,
                      "contract_id": null,
                      "phone": "9031580404",
                      "email": "sanek1_2@mail.ru",
                      "snils": "047-368-372 85",
                      "type": null
                    }
                  ],
                  "sections": [
                    {
                      "id": 4284557,
                      "name": "Объединение «Комплексная услуга  – 8 Г» - 1",
                      "subject_id": null
                    }
                  ],
                  "sudir_account_exists": true,
                  "sudir_login": "halevaea",
                  "is_legal_representative": true,
                  "parallel_curriculum_id": 302441,
                  "contingent_guid": "e5d9db66-0c69-4b48-9bd5-74f4f6f78d5c"
                }
              ],
              "hash": "2c27cb88613103101b6b83875dae6f1ef84d9d518ade1c9c4aa6ad3a522f5834"
            }
          }
        },
        "title": "",
        "x-internal": false
      },
      "NutritionResponse": {
        "type": "object",
        "required": [
          "carbs",
          "fat",
          "protein"
        ],
        "properties": {
          "calories": {
            "type": "number",
            "format": "double",
            "description": "Ккал"
          },
          "carbs": {
            "type": "number",
            "format": "double",
            "description": "Углеводы"
          },
          "fat": {
            "type": "number",
            "format": "double",
            "description": "Жиры"
          },
          "protein": {
            "type": "number",
            "format": "double",
            "description": "Белки"
          },
          "vitamins": {
            "type": "array",
            "description": "Все витамины в блюде, например ['A','B','C']",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Пищевая ценность"
      },
      "ActivityScheduleItemResponse": {
        "type": "object",
        "required": [
          "marks",
          "schedule_item_id",
          "subject_id",
          "subject_name",
          "teacher"
        ],
        "properties": {
          "absence_reason_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор причины отсутствия"
          },
          "course_lesson_type": {
            "type": "string",
            "description": "Тип урока (обычный урок (может быть null), тематическая контрольная работа, модульная контрольная работа)",
            "enum": [
              "LESSON",
              "THEMATIC_TEST",
              "MODULE_TEST",
              "LAB",
              "PRACTICE"
            ]
          },
          "evaluation": {
            "type": "string",
            "description": "Оценка урока",
            "enum": [
              "LIKE",
              "DISLIKE"
            ]
          },
          "homework": {
            "type": "string",
            "description": "Домашнее задание"
          },
          "is_cancelled": {
            "type": "boolean",
            "example": false,
            "description": "Признак отмены занятия"
          },
          "is_missed_lesson": {
            "type": "boolean",
            "example": false,
            "description": "Признак пропуска урока"
          },
          "is_virtual": {
            "type": "boolean",
            "example": false,
            "description": "Флаг урока виртуального помощника"
          },
          "lesson_education_type": {
            "type": "string",
            "description": "Тип урока ОО(общее), AE(доп), EC(внеурочка)",
            "enum": [
              "ОО",
              "AE",
              "EC"
            ]
          },
          "lesson_type": {
            "type": "string",
            "description": "Тип урока NORMAL, REMOTE, ELECTRONIC"
          },
          "link_types": {
            "type": "array",
            "description": "Типы заданных материалов",
            "items": {
              "type": "string"
            }
          },
          "marks": {
            "type": "array",
            "description": "Отметки",
            "items": {
              "$ref": "#/components/schemas/SimpleMarkResponse"
            }
          },
          "materials_count": {
            "type": "object",
            "description": "Количество материалов",
            "additionalProperties": {
              "type": "integer",
              "format": "int32"
            }
          },
          "schedule_item_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор урока"
          },
          "subject_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор предмета"
          },
          "subject_name": {
            "type": "string",
            "description": "Наименование предмета"
          },
          "teacher": {
            "$ref": "#/components/schemas/UserResponse"
          }
        }
      },
      "RequestServiceResponse": {
        "type": "object",
        "properties": {
          "classificator_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор классификатора"
          },
          "classificator_name": {
            "type": "string",
            "description": "Наименование классификатора"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор услуги"
          },
          "name": {
            "type": "string",
            "description": "Название услуги"
          }
        }
      },
      "StudentStatusResponse": {
        "type": "object",
        "required": [
          "at_school",
          "balance",
          "contract_id"
        ],
        "properties": {
          "at_school": {
            "type": "boolean",
            "example": false,
            "description": "В школе"
          },
          "balance": {
            "type": "integer",
            "format": "int64",
            "description": "Баланс (в копейках)"
          },
          "contract_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор контракта ученика"
          }
        }
      },
      "HomeworkListResponse": {
        "type": "object",
        "required": [
          "payload"
        ],
        "properties": {
          "payload": {
            "type": "array",
            "description": "Домашние задания",
            "items": {
              "$ref": "#/components/schemas/HomeworkResponse"
            }
          }
        }
      },
      "ProgramLessonResponse": {
        "type": "object",
        "required": [
          "ordinal",
          "title"
        ],
        "properties": {
          "date": {
            "type": "string",
            "description": "Дата урока"
          },
          "events": {
            "type": "array",
            "example": "[test, absence, review_work]",
            "description": "События урока",
            "items": {
              "type": "string",
              "enum": [
                "TEST",
                "ABSENCE",
                "REVIEW_WORK"
              ]
            }
          },
          "lesson_schedule_id": {
            "type": "integer",
            "format": "int64",
            "description": "ID урока"
          },
          "materials": {
            "type": "array",
            "description": "Список материалов",
            "items": {
              "$ref": "#/components/schemas/AdditionalMaterialResponse"
            }
          },
          "ordinal": {
            "type": "integer",
            "format": "int32",
            "description": "Порядок урока"
          },
          "title": {
            "type": "string",
            "description": "Тема урока"
          }
        }
      },
      "ControlFileResponse": {
        "type": "object",
        "required": [
          "link",
          "name"
        ],
        "properties": {
          "link": {
            "type": "string",
            "description": "Ссылка на файл"
          },
          "name": {
            "type": "string",
            "description": " Имя файла"
          }
        }
      },
      "MarkResponse": {
        "type": "object",
        "required": [
          "activity",
          "date",
          "history",
          "id",
          "teacher",
          "value",
          "weight"
        ],
        "properties": {
          "activity": {
            "$ref": "#/components/schemas/SimpleActivityResponse"
          },
          "comment": {
            "type": "string",
            "description": "Комментарий"
          },
          "comment_exists": {
            "type": "boolean",
            "example": false,
            "description": "Флаг наличия комментария"
          },
          "control_form_name": {
            "type": "string",
            "example": "Контрольная работа",
            "description": "Наименование формы контроля"
          },
          "created_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "criteria": {
            "type": "array",
            "description": "Массив критериев оценки",
            "items": {
              "$ref": "#/components/schemas/MarkCriteriaResponse"
            }
          },
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "history": {
            "type": "array",
            "description": "История изменений",
            "items": {
              "$ref": "#/components/schemas/MarkHistoryResponse"
            }
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор оценки"
          },
          "is_exam": {
            "type": "boolean",
            "example": false,
            "description": "Признак экзамена (контрольной"
          },
          "is_point": {
            "type": "boolean",
            "example": false,
            "description": "Признак точки"
          },
          "point_date": {
            "type": "string",
            "description": "Дата точки"
          },
          "teacher": {
            "$ref": "#/components/schemas/UserResponse"
          },
          "updated_at": {
            "$ref": "#/components/schemas/LocalDateTime"
          },
          "value": {
            "type": "string",
            "description": "Значение"
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "description": "Вес"
          }
        }
      },
      "BillingDetailsResponse": {
        "type": "object",
        "required": [
          "amount",
          "description",
          "time",
          "type"
        ],
        "properties": {
          "amount": {
            "type": "integer",
            "format": "int64",
            "description": "Сумма (в копейках)"
          },
          "description": {
            "type": "string",
            "description": "Описание"
          },
          "time": {
            "type": "string",
            "description": "Время транзакции"
          },
          "type": {
            "type": "string",
            "description": "Тип",
            "enum": [
              "PURCHASE",
              "REFILL"
            ]
          }
        }
      },
      "MarkHistoryResponse": {
        "type": "object",
        "required": [
          "after",
          "date"
        ],
        "properties": {
          "after": {
            "$ref": "#/components/schemas/SimpleMarkResponse"
          },
          "before": {
            "$ref": "#/components/schemas/SimpleMarkResponse"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "description": "Дата"
          }
        }
      },
      "LocalDateTime": {
        "type": "object",
        "properties": {
          "chronology": {
            "$ref": "#/components/schemas/Chronology"
          },
          "dayOfMonth": {
            "type": "integer",
            "format": "int32"
          },
          "dayOfWeek": {
            "type": "string",
            "enum": [
              "MONDAY",
              "TUESDAY",
              "WEDNESDAY",
              "THURSDAY",
              "FRIDAY",
              "SATURDAY",
              "SUNDAY"
            ]
          },
          "dayOfYear": {
            "type": "integer",
            "format": "int32"
          },
          "hour": {
            "type": "integer",
            "format": "int32"
          },
          "minute": {
            "type": "integer",
            "format": "int32"
          },
          "month": {
            "type": "string",
            "enum": [
              "JANUARY",
              "FEBRUARY",
              "MARCH",
              "APRIL",
              "MAY",
              "JUNE",
              "JULY",
              "AUGUST",
              "SEPTEMBER",
              "OCTOBER",
              "NOVEMBER",
              "DECEMBER"
            ]
          },
          "monthValue": {
            "type": "integer",
            "format": "int32"
          },
          "nano": {
            "type": "integer",
            "format": "int32"
          },
          "second": {
            "type": "integer",
            "format": "int32"
          },
          "year": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "SimpleHomeworkResponse": {
        "type": "object",
        "required": [
          "date",
          "description",
          "has_written_answer",
          "homework_entry_student_id",
          "is_done",
          "materials_count",
          "subject_id",
          "subject_name"
        ],
        "properties": {
          "date": {
            "type": "string",
            "description": "Дата, до которой надо сдать задание"
          },
          "date_assigned_on": {
            "$ref": "#/components/schemas/LocalDate"
          },
          "description": {
            "type": "string",
            "description": "Описание домашнего задания"
          },
          "has_written_answer": {
            "type": "boolean",
            "example": false,
            "description": "Флаг наличия письменного ответа"
          },
          "homework_entry_student_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор Д.З. ученика"
          },
          "is_done": {
            "type": "boolean",
            "example": false,
            "description": "Флаг выполненного домашнего задания"
          },
          "materials_count": {
            "type": "array",
            "description": "Массив счетчиков прикрепленных материалов",
            "items": {
              "$ref": "#/components/schemas/SimpleAdditionalMaterialResponse"
            }
          },
          "subject_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор предмета"
          },
          "subject_name": {
            "type": "string",
            "description": "Название предмета"
          }
        }
      },
      "EventListResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "array",
            "description": "Набор мероприятий (начиная от ближайших)",
            "items": {
              "$ref": "#/components/schemas/EventItemResponse"
            }
          }
        }
      },
      "SchoolResponse": {
        "type": "object",
        "required": [
          "id",
          "name",
          "short_name"
        ],
        "properties": {
          "county": {
            "type": "string",
            "description": "Округ"
          },
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор школы"
          },
          "name": {
            "type": "string",
            "description": "Название"
          },
          "phone": {
            "type": "string",
            "description": "Телефон"
          },
          "principal": {
            "type": "string",
            "description": "Директор"
          },
          "short_name": {
            "type": "string",
            "description": "Короткое название"
          }
        }
      },
      "RequestScheduleResponse": {
        "type": "object",
        "properties": {
          "day": {
            "type": "integer",
            "format": "int32",
            "description": "День недели, цифра от 1 до 7, где 1 - понедельник"
          },
          "finish_at": {
            "$ref": "#/components/schemas/LocalTime"
          },
          "start_at": {
            "$ref": "#/components/schemas/LocalTime"
          }
        }
      },
      "SimpleControllableItemResponse": {
        "type": "object",
        "required": [
          "code",
          "id",
          "link",
          "name"
        ],
        "properties": {
          "code": {
            "type": "string",
            "description": "Код раздела, темы, элемента"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор КЭС"
          },
          "link": {
            "type": "string",
            "description": "Ссылка"
          },
          "name": {
            "type": "string",
            "description": "Название КЭС"
          }
        }
      },
      "MaterialResponse": {
        "type": "object",
        "required": [
          "items",
          "type"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Список учебных материалов",
            "items": {
              "$ref": "#/components/schemas/AttachmentSummaryResponse"
            }
          },
          "type": {
            "type": "string",
            "description": "Тип материалов",
            "enum": [
              "composed_documents",
              "video",
              "test_specifications",
              "game_apps",
              "video_lessons",
              "lesson_templates",
              "books"
            ]
          }
        }
      },
      "StudentProfileGroupResponse": {
        "type": "object",
        "required": [
          "id",
          "name",
          "subject_id"
        ],
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор группы"
          },
          "name": {
            "type": "string",
            "description": "Название группы"
          },
          "subject_id": {
            "type": "integer",
            "format": "int32",
            "description": "ID предмета"
          }
        }
      },
      "BuildingResponse": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Адрес здания"
          },
          "is_main_building": {
            "type": "boolean",
            "example": false,
            "description": "Признак главного здания школы"
          },
          "name": {
            "type": "string",
            "description": "Название здания"
          },
          "type": {
            "type": "string",
            "description": "Тип учебного заведения"
          }
        }
      },
      "MenuOfBuffetResponse": {
        "type": "object",
        "properties": {
          "menu": {
            "type": "array",
            "description": "Меню по дням",
            "items": {
              "$ref": "#/components/schemas/MenuOfBuffetDateItemResponse"
            }
          }
        }
      },
      "SudirUserRegRequest": {
        "type": "object",
        "required": [
          "FirstName",
          "LastName",
          "MiddleName",
          "login",
          "password"
        ],
        "properties": {
          "FirstName": {
            "type": "string",
            "description": "Имя"
          },
          "LastName": {
            "type": "string",
            "description": "Фамилия"
          },
          "MiddleName": {
            "type": "string",
            "description": "Отчество"
          },
          "login": {
            "type": "string",
            "description": "Логин"
          },
          "mail": {
            "$ref": "#/components/schemas/Sudir_ontact"
          },
          "mobile": {
            "$ref": "#/components/schemas/Sudir_ontact"
          },
          "password": {
            "type": "string",
            "description": "Пароль"
          },
          "snils": {
            "type": "string",
            "description": "Снилс"
          }
        },
        "description": "Регистрация ребенка из ЭЖД в СУДИР"
      },
      "ProhibitionResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Текст фильтра запрета"
          },
          "prohibition_id": {
            "type": "integer",
            "format": "int64",
            "description": "ID запрета"
          }
        }
      },
      "LessonDetailResponse": {
        "type": "object",
        "required": [
          "content",
          "materials"
        ],
        "properties": {
          "content": {
            "type": "array",
            "description": "Массив контролируемых элементов содержания (КЭС)",
            "items": {
              "$ref": "#/components/schemas/SimpleControllableItemResponse"
            }
          },
          "lesson_topic": {
            "type": "string",
            "description": "Тема урока"
          },
          "materials": {
            "type": "array",
            "description": "Массив материалов урока",
            "items": {
              "$ref": "#/components/schemas/AdditionalMaterialResponse"
            }
          },
          "theme": {
            "$ref": "#/components/schemas/LessonThemeResponse"
          }
        }
      },
      "Chronology": {
        "type": "object",
        "properties": {
          "calendarType": {
            "type": "string"
          },
          "id": {
            "type": "string"
          }
        }
      },
      "CommonResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false,
            "description": "Признак успешности операции"
          }
        }
      },
      "VisitResponse": {
        "type": "object",
        "required": [
          "duration",
          "in",
          "is_warning",
          "out"
        ],
        "properties": {
          "address": {
            "type": "string",
            "description": "Адрес организации"
          },
          "duration": {
            "type": "string",
            "example": "2 ч. 39 мин.",
            "description": "Длительность"
          },
          "in": {
            "type": "string",
            "example": "09:01, 11:40, -",
            "description": "Вход"
          },
          "is_warning": {
            "type": "boolean",
            "example": false,
            "description": "Признак ошибки (если отсутствует вход или выход)"
          },
          "out": {
            "type": "string",
            "example": "09:01, 11:40, -",
            "description": "Выход"
          },
          "short_name": {
            "type": "string",
            "description": "Краткое наименование организации"
          },
          "type": {
            "type": "string",
            "description": "Тип прохода",
            "enum": [
              "COMMON",
              "MUSEUM"
            ]
          }
        }
      },
      "AttendanceResponse": {
        "type": "object",
        "required": [
          "date",
          "lessons",
          "summary"
        ],
        "properties": {
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "is_system": {
            "type": "boolean",
            "example": false,
            "description": "флаг отсутствия, созданный системой"
          },
          "lessons": {
            "type": "array",
            "description": "Детализация по урокам",
            "items": {
              "$ref": "#/components/schemas/AttendanceLessonResponse"
            }
          },
          "notified": {
            "type": "boolean",
            "example": false,
            "description": "Отметка об уведомлении"
          },
          "reason_id": {
            "type": "integer",
            "format": "int32",
            "description": "Причина отсутствия"
          },
          "summary": {
            "type": "string",
            "example": "3 урока, Весь день",
            "description": "Описание"
          }
        }
      },
      "ExpenditureLimitResponse": {
        "type": "object",
        "required": [
          "limit"
        ],
        "properties": {
          "limit": {
            "type": "integer",
            "format": "int64",
            "description": "Размер дневного ограничения на затраты"
          }
        }
      },
      "DateVisitResponse": {
        "type": "object",
        "required": [
          "date",
          "visits"
        ],
        "properties": {
          "date": {
            "type": "string",
            "description": "Дата"
          },
          "visits": {
            "type": "array",
            "description": "Список входов/выходов на дату",
            "items": {
              "$ref": "#/components/schemas/VisitResponse"
            }
          }
        }
      },
      "RequestCreatingPersonRequestDto": {
        "type": "object",
        "properties": {
          "birth_date": {
            "type": "string",
            "description": "Дата рождения"
          },
          "contingent_guid": {
            "type": "string",
            "description": "Guid МЭШ.Контингент"
          },
          "document_issue_date": {
            "type": "string",
            "description": "Дата выдачи документа"
          },
          "document_issuer": {
            "type": "string",
            "description": "Кем выдан документ"
          },
          "document_number": {
            "type": "string",
            "description": "Номер документа"
          },
          "document_series": {
            "type": "string",
            "description": "Серия документа"
          },
          "document_type_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор документа (по умолчанию Свид. о рождении)"
          },
          "email": {
            "type": "string",
            "description": "E-mail"
          },
          "first_name": {
            "type": "string",
            "description": "Имя"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество"
          },
          "person_type": {
            "type": "integer",
            "format": "int32",
            "description": "Тип персоны (1 - Мать, 2 - Отец, 3 - Законный представитель, 4 - Заявитель, 5 - Попечитель, 6 - Контактное лицо, 7 - Ребенок, 8 - Супруг, 9 - Родственник, 10 - Другой)"
          },
          "phone_number": {
            "type": "string",
            "description": "Номер телефона"
          },
          "sex": {
            "type": "string",
            "description": "Пол (мужской, женксикй)"
          },
          "snils": {
            "type": "string",
            "description": "Номер СНИЛС"
          }
        }
      },
      "PathToTargetResponse": {
        "type": "object",
        "required": [
          "remain",
          "value",
          "weight"
        ],
        "properties": {
          "remain": {
            "type": "integer",
            "format": "int32",
            "description": "Количество оценок оставшихся до цели, 0 - цель достигнута"
          },
          "value": {
            "type": "integer",
            "format": "int32",
            "description": "Оценка"
          },
          "weight": {
            "type": "integer",
            "format": "int32",
            "description": "Вес оценки"
          }
        },
        "description": "Путь до цели"
      },
      "SubjectsListResponse": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "array",
            "description": "Список предметов",
            "items": {
              "$ref": "#/components/schemas/SubjectResponse"
            }
          }
        },
        "description": "Предметы"
      },
      "AttendanceNotificationCreationResponse": {
        "type": "object",
        "required": [
          "ids"
        ],
        "properties": {
          "ids": {
            "type": "array",
            "description": "Идентификаторы созданных уведомлений",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "QName": {
        "type": "object",
        "properties": {
          "localPart": {
            "type": "string"
          },
          "namespaceURI": {
            "type": "string"
          },
          "prefix": {
            "type": "string"
          }
        }
      },
      "AttendanceDateNotificationRequest": {
        "type": "object",
        "required": [
          "date"
        ],
        "properties": {
          "bell_id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор элемента расписания (отсутствует, если уведомление на всю дату, а не конкретный урок)"
          },
          "date": {
            "type": "string",
            "description": "Дата"
          }
        }
      },
      "AdditionalMaterialResponse": {
        "type": "object",
        "required": [
          "items",
          "type"
        ],
        "properties": {
          "items": {
            "type": "array",
            "description": "Элементы",
            "items": {
              "$ref": "#/components/schemas/AttachmentSummaryResponse"
            }
          },
          "type": {
            "type": "string",
            "description": "Тип доп. материала",
            "enum": [
              "lesson_template",
              "game_app",
              "test_specification",
              "spec",
              "composed_document",
              "books",
              "attachment"
            ]
          }
        }
      },
      "ClassificatorResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Корневые элементы дерева",
            "items": {
              "$ref": "#/components/schemas/ClassificatorItemResponse"
            }
          }
        }
      },
      "ClassificatorItemResponse": {
        "type": "object",
        "properties": {
          "child_items": {
            "type": "array",
            "description": "Дочерние ветки классификатора",
            "items": {
              "$ref": "#/components/schemas/ClassificatorItemResponse"
            }
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "description": "Идентификатор классификатора"
          },
          "name": {
            "type": "string",
            "description": "Наименование ветки классификатора"
          }
        }
      },
      "UserResponse": {
        "type": "object",
        "required": [
          "last_name"
        ],
        "properties": {
          "birth_date": {
            "type": "string",
            "description": "Дата рождения"
          },
          "first_name": {
            "type": "string",
            "description": "Имя"
          },
          "last_name": {
            "type": "string",
            "description": "Фамилия"
          },
          "middle_name": {
            "type": "string",
            "description": "Отчество"
          },
          "sex": {
            "type": "string",
            "description": "Пол",
            "enum": [
              "male",
              "female"
            ]
          },
          "user_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор пользователя"
          }
        },
        "description": "",
        "title": "",
        "x-examples": {
          "user-test": {
            "value": {
              "birth_date": "1979-09-24",
              "first_name": "Елена",
              "last_name": "Халева",
              "middle_name": "Юрьевна",
              "sex": null,
              "user_id": 9571147
            }
          }
        }
      },
      "MenuResponse": {
        "type": "object",
        "properties": {
          "menu": {
            "type": "array",
            "description": "Массив данных по комплексу питания (завтраку, обеду, ужину)",
            "items": {
              "$ref": "#/components/schemas/MenuItemResponse"
            }
          }
        },
        "description": "Меню"
      },
      "MenuOfBuffetItemResponse": {
        "type": "object",
        "required": [
          "available_now",
          "carbs",
          "fat",
          "group",
          "name",
          "output",
          "price",
          "protein"
        ],
        "properties": {
          "available_now": {
            "type": "integer",
            "format": "int32",
            "description": "Настройка блюда для продажи на кассе"
          },
          "calories": {
            "type": "number",
            "format": "double",
            "description": "Ккал"
          },
          "carbs": {
            "type": "number",
            "format": "double",
            "description": "Углеводы"
          },
          "fat": {
            "type": "number",
            "format": "double",
            "description": "Жиры"
          },
          "full_name": {
            "type": "string",
            "description": "Полное наименование"
          },
          "group": {
            "type": "string",
            "description": "Группа (Первое, Второе, Напитки, и т.д.)"
          },
          "id_of_menu_detail": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор блюда"
          },
          "id_of_prohibition": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор запрета"
          },
          "name": {
            "type": "string",
            "description": "Наименование"
          },
          "output": {
            "type": "string",
            "description": "Масса в граммах"
          },
          "price": {
            "type": "integer",
            "format": "int64",
            "description": "Цена"
          },
          "protein": {
            "type": "number",
            "format": "double",
            "description": "Белки"
          },
          "vitamins": {
            "type": "array",
            "description": "Все витамины в блюде, например ['A','B','C']",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Меню буффета"
      },
      "ShortSubjectMarksResponse": {
        "type": "object",
        "required": [
          "average",
          "count",
          "dynamic",
          "subject_name",
          "target"
        ],
        "properties": {
          "average": {
            "type": "string",
            "description": "Средняя оценка"
          },
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Количество оценок за период"
          },
          "dynamic": {
            "type": "string",
            "description": "Динамика оценки",
            "enum": [
              "UP",
              "DOWN",
              "NONE"
            ]
          },
          "fixed_value": {
            "type": "string",
            "description": "Итоговое значение за период, может быть null, если период не закончен"
          },
          "period": {
            "type": "string",
            "example": "2 период, 3 четверть",
            "description": "Название текущего периода"
          },
          "subject_name": {
            "type": "string",
            "description": "Название предмета"
          },
          "target": {
            "$ref": "#/components/schemas/TargetResponse"
          }
        }
      },
      "SubjectMarksListResponse": {
        "type": "object",
        "required": [
          "payload"
        ],
        "properties": {
          "payload": {
            "type": "array",
            "description": "Список оценок по предметам",
            "items": {
              "$ref": "#/components/schemas/SubjectMarksResponse"
            }
          }
        }
      },
      "ProhibitionRequest": {
        "type": "object",
        "properties": {
          "contract_id": {
            "type": "integer",
            "format": "int64",
            "description": "Идентификатор контракта учащегося"
          },
          "items": {
            "type": "array",
            "description": "Текст фильтра запрета",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "NotificationResponse": {
        "type": "object",
        "required": [
          "author_profile_id",
          "student_profile_id",
          "teacher_name"
        ],
        "properties": {
          "author_profile_id": {
            "type": "integer",
            "format": "int64",
            "description": "Id профиля, кем было совершено событие"
          },
          "control_form_name": {
            "type": "string",
            "description": "Название контрольной формы"
          },
          "created_at": {
            "type": "string",
            "description": "Дата создания"
          },
          "datetime": {
            "type": "string",
            "description": "Дата события"
          },
          "deleted_at": {
            "type": "string",
            "description": "Дата удаления"
          },
          "event_type": {
            "type": "string",
            "description": "Тип события",
            "enum": [
              "create_mark",
              "update_mark",
              "delete_mark",
              "create_homework",
              "update_homework",
              "delete_homework",
              "create_mark_comment",
              "update_mark_comment",
              "delete_mark_comment",
              "create_lesson_comment",
              "update_lesson_comment",
              "delete_lesson_comment",
              "create_student_to_group_link",
              "update_student_to_group_link",
              "delete_student_to_group_link"
            ]
          },
          "is_changed_hw_materials": {
            "type": "string",
            "description": "Флаг, указывающий, были ли изменения в материалах дз (пока не заполняется)"
          },
          "lesson_date": {
            "type": "string",
            "description": "Дата и время урока, к которому привязано событие"
          },
          "new_date_assigned_on": {
            "type": "string",
            "example": "31.01.2017",
            "description": "Новая дата выдачи домашнего задания"
          },
          "new_date_prepared_for": {
            "type": "string",
            "example": "31.01.2017",
            "description": "Новая дата сдачи домашнего задания"
          },
          "new_group_name": {
            "type": "string",
            "description": "Новое имя группы"
          },
          "new_hw_description": {
            "type": "string",
            "description": "Новое описание домашнего задания"
          },
          "new_is_exam": {
            "type": "boolean",
            "example": false,
            "description": "Признак экзамена у новой оценки"
          },
          "new_lesson_comment": {
            "type": "string",
            "description": "Новый комментарий к уроку"
          },
          "new_mark_comment": {
            "type": "string",
            "description": "Новый комментарий к оценке"
          },
          "new_mark_value": {
            "type": "string",
            "description": "Новое значение оценки"
          },
          "new_mark_weight": {
            "type": "integer",
            "format": "int32",
            "description": "Вес оценки после изменения"
          },
          "old_date_assigned_on": {
            "type": "string",
            "example": "31.01.2017",
            "description": "Старая дата выдачи домашнего задания"
          },
          "old_date_prepared_for": {
            "type": "string",
            "example": "31.01.2017",
            "description": "Старая дата сдачи домашнего задания"
          },
          "old_group_name": {
            "type": "string",
            "description": "Старое имя группы"
          },
          "old_hw_description": {
            "type": "string",
            "description": "Старое описание домашнего задания"
          },
          "old_is_exam": {
            "type": "boolean",
            "example": false,
            "description": "Признак экзамена у старой оценки"
          },
          "old_lesson_comment": {
            "type": "string",
            "description": "Старый комментарий к уроку"
          },
          "old_mark_comment": {
            "type": "string",
            "description": "Старый комментарий к оценке"
          },
          "old_mark_value": {
            "type": "string",
            "description": "Старое значение оценки"
          },
          "old_mark_weight": {
            "type": "integer",
            "format": "int32",
            "description": "Вес оценки до изменения"
          },
          "student_profile_id": {
            "type": "integer",
            "format": "int32",
            "description": "Id профиля студента"
          },
          "subject_name": {
            "type": "string",
            "description": "Название предмета"
          },
          "teacher_name": {
            "type": "string",
            "description": "Имя учителя, совершившего изменение"
          },
          "updated_at": {
            "type": "string",
            "description": "Дата изменения"
          }
        }
      },
      "SubjectMarksPeriodResponse": {
        "type": "object",
        "required": [
          "count",
          "dynamic",
          "end",
          "marks",
          "start",
          "target",
          "title"
        ],
        "properties": {
          "count": {
            "type": "integer",
            "format": "int32",
            "description": "Количество оценок за период"
          },
          "dynamic": {
            "type": "string",
            "description": "Динамика оценки",
            "enum": [
              "UP",
              "DOWN",
              "NONE"
            ]
          },
          "end": {
            "type": "string",
            "example": "31.12",
            "description": "Дата окончания"
          },
          "fixed_value": {
            "type": "string",
            "description": "Итоговое значение за период, может быть null, если период не закончен"
          },
          "marks": {
            "type": "array",
            "description": "Оценки за данный период",
            "items": {
              "$ref": "#/components/schemas/MarkWithDateResponse"
            }
          },
          "start": {
            "type": "string",
            "example": "28.02",
            "description": "Дата начала"
          },
          "target": {
            "$ref": "#/components/schemas/TargetResponse"
          },
          "title": {
            "type": "string",
            "example": "2 период, 3 четверть",
            "description": "Название периода"
          },
          "value": {
            "type": "string",
            "description": "Текущее среднее значение"
          }
        }
      },
      "SchedulePeriodResponse": {
        "type": "object",
        "properties": {
          "items": {
            "type": "array",
            "description": "Список расписаний по дням",
            "items": {
              "$ref": "#/components/schemas/ScheduleResponse"
            }
          }
        }
      },
      "ShortSubjectMarksListResponse": {
        "type": "object",
        "required": [
          "payload"
        ],
        "properties": {
          "payload": {
            "type": "array",
            "description": "Список оценок по предметам",
            "items": {
              "$ref": "#/components/schemas/ShortSubjectMarksResponse"
            }
          }
        }
      },
      "Sudir_ontact": {
        "type": "object",
        "required": [
          "verified"
        ],
        "properties": {
          "value": {
            "type": "string",
            "description": "Данные контакта"
          },
          "verified": {
            "type": "boolean",
            "example": true,
            "description": "Флаг, указывающий проверен ли контакт"
          }
        },
        "description": "Контакт"
      }
    }
  }
}